<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tuzi</title>
  
  <subtitle>兔子BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://woshilishang123.github.io/"/>
  <updated>2019-02-26T09:28:54.622Z</updated>
  <id>https://woshilishang123.github.io/</id>
  
  <author>
    <name>tuzi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>css效果</title>
    <link href="https://woshilishang123.github.io/2019/02/26/css%E6%95%88%E6%9E%9C/"/>
    <id>https://woshilishang123.github.io/2019/02/26/css效果/</id>
    <published>2019-02-26T06:28:47.000Z</published>
    <updated>2019-02-26T09:28:54.622Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS效果"><a href="#CSS效果" class="headerlink" title="CSS效果"></a><center>CSS效果</center></h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本篇博客介绍css中的一些效果，比如：box-shadow、text-shadow、border-radius、background、clip-path、3D-tranform等。</p><p>通过本博客的学习，你可是通过CSS实现一些特殊的效果，阴影，动画等。css的效果也被称为css最出彩的一部分。</p><p><img src="/2019/02/26/css效果/liuyifei.jpg" alt="刘亦菲" title="刘亦菲"></p><a id="more"></a><h3 id="box-shadow（投影）、clip-path（使用较少，但神奇）、3D-tranform"><a href="#box-shadow（投影）、clip-path（使用较少，但神奇）、3D-tranform" class="headerlink" title="box-shadow（投影）、clip-path（使用较少，但神奇）、3D-tranform"></a>box-shadow（投影）、clip-path（使用较少，但神奇）、3D-tranform</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><img src="/2019/02/26/css效果/shadow.jpg" alt="box-shadow" title="box-shadow"></p><p>外阴影：</p><p>24px：投影的模糊区域大小（模糊区域）</p><p>40px：投影在border box shape的基础上要扩展多少.为负值的时候投影缩小（拓展区域）</p><p>64px 64px：投影相对于原元素的偏移（偏移位置）</p><p>rgba：投影颜色和透明度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>：0 0 0 15<span class="selector-tag">px</span> <span class="selector-tag">red</span></span><br></pre></td></tr></table></figure><p>上述代码相当也给元素加了一个15px宽的外边框。此外边框和border不同的是不占据空间。元素的宽高保持不变。</p><div><br>    <p style="width: 150px; height: 100px; box-shadow: 0px 0px 0px 85px green; background: red; margin:0 auto; text-align: center"><br>        外阴影<br>    </p><br>    <p style="text-align: center; line-height:24px"><br>        此文字可以显示在上一段的“外边框”部分<br>    </p><br></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>：0 0 0 15<span class="selector-tag">px</span> <span class="selector-tag">red</span>，</span><br><span class="line">12<span class="selector-tag">px</span> 12<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> <span class="selector-tag">green</span>;</span><br></pre></td></tr></table></figure><p>上述代码会形成两个投影，而不是替代第一个投影。</p><p>利用此特性可以使用一个div完成一个复杂的图形。</p><p>内阴影：比外阴影多一个inset属性 。inset可以写在最前或最后。</p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>营造层次感（立体感）</p><p> 充当没有宽度的边框（不会占据空间，不影响排版）</p><p>特殊效果：无线投影</p><h3 id="text-shadow（文本投影）"><a href="#text-shadow（文本投影）" class="headerlink" title="text-shadow（文本投影）"></a>text-shadow（文本投影）</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><p>立体感</p><p>印刷品质感（字体边缘有模糊，类似图书）</p><div><br>    <center>《背影》</center><br>    <p style="line-height:2em; text-shadow: 1px 1px 0 #aaaaaa"><br>        我与父亲不相见已二年余了，我最不能忘记的是他的背影。那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子，我从北京到徐州，打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路！”<br>    </p><br>    <p style="line-height:2em; text-shadow: 0 0 1px rgba(128,128,128,.4)"><br>       回家变卖典质，父亲还了亏空；又借钱办了丧事。这些日子，家中光景很是惨淡，一半为了丧事，一半为了父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。<br>    </p><br>　　<p style="line-height:2em; text-shadow: -1px -1px 0 #ffffff; background: #000000"><br>　　到南京时，有朋友约去游逛，勾留了一日；第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖；颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有甚么要紧的了。他踌躇了一会，终于决定还是自己送我去。我两三回劝他不必去；他只说，“不要紧，他们去不好！”<br>    </p><br></div><h3 id="border-radius（圆角）"><a href="#border-radius（圆角）" class="headerlink" title="border-radius（圆角）"></a>border-radius（圆角）</h3><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>圆角矩形</p><p>圆形</p><p>半圆/扇形</p><p>一些奇奇怪怪的角</p><p>demo:</p><div><br>    <p style="width:100px; height:100px; background:red; border-radius:50px"><br><br>    </p><br>    <p style="width:100px; height:100px; background:red; border-radius:50%"><br><br>    </p><br>    <p style="width:100px; height:100px; background:red; border-radius:50px; border:15px solid green"><br><br>    </p><br>    <p style="width:100px; height:100px; background:red; border-top-left-radius:50px; border:15px solid green"><br><br>    </p><br>    <p style="width:100px; height:100px; background:red; border-top-left-radius:50px 100px; border:15px solid green"><br><br>    </p><br></div><p>倒数第二个还可以设置：border-top-left-radius、border-top-right-radius、border-bottom-left-radius、border-bottom-right-radius最后一个设置的垂直和水平方向不同的半径。</p><h3 id="background（背景）"><a href="#background（背景）" class="headerlink" title="background（背景）"></a>background（背景）</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS效果&quot;&gt;&lt;a href=&quot;#CSS效果&quot; class=&quot;headerlink&quot; title=&quot;CSS效果&quot;&gt;&lt;/a&gt;&lt;center&gt;CSS效果&lt;/center&gt;&lt;/h1&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;本篇博客介绍css中的一些效果，比如：box-shadow、text-shadow、border-radius、background、clip-path、3D-tranform等。&lt;/p&gt;
&lt;p&gt;通过本博客的学习，你可是通过CSS实现一些特殊的效果，阴影，动画等。css的效果也被称为css最出彩的一部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/02/26/css效果/liuyifei.jpg&quot; alt=&quot;刘亦菲&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css布局——float、inline-block、响应式布局</title>
    <link href="https://woshilishang123.github.io/2019/02/17/css%E5%B8%83%E5%B1%80%E2%80%94%E2%80%94float%E5%B8%83%E5%B1%80/"/>
    <id>https://woshilishang123.github.io/2019/02/17/css布局——float布局/</id>
    <published>2019-02-17T04:22:02.000Z</published>
    <updated>2019-02-25T12:40:33.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本篇博客主要介绍float布局、inline-block布局和响应式布局。<br><img src="/2019/02/17/css布局——float布局/liuyifei.jpg" alt="刘亦菲" title="刘亦菲"></p><p><strong><a id="more"></a></strong></p><h1 id="float布局"><a href="#float布局" class="headerlink" title="float布局"></a>float布局</h1><p>特点：元素浮动  脱离文档流  但不脱离文本流</p><p>对自身的影响：1、形成“块”(BFC) 这个“块”负责自己的布局，比如可以设置自己的宽高。2、位置尽量靠上。 3、位置尽量靠左（右）。</p><p><iframe src="//player.bilibili.com/player.html?aid=28282286&cid=48899295&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="480" height="360"> </iframe><br> 对兄弟的影响：1、上面贴非float元素。 2、旁边贴float元素。3、不影响其他块级元素位置（即脱离文档流）。4、影响其他块级元素内部文本（即不脱离文本流）。</p><p>对父级元素的影响：1、从布局上”消失“   ，可能造成高度塌陷。</p><p>避免高度塌陷：1、让父元素也变成“块”</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:auto;<span class="comment">/*or hidden*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、设置一个元素超出浮动部分，撑起布局。常用清除浮动方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="float布局案例"><a href="#float布局案例" class="headerlink" title="float布局案例"></a>float布局案例</h3><p>实现两栏三栏布局</p><h1 id="inline-block布局"><a href="#inline-block布局" class="headerlink" title="inline-block布局"></a>inline-block布局</h1><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1、像文本一样并列排起来。</p><p>2、没有清楚浮动等问题</p><p>3、需要处理间隙</p><h3 id="如何处理间隙"><a href="#如何处理间隙" class="headerlink" title="如何处理间隙"></a>如何处理间隙</h3><p>1、父元素：font-size=0；子元素（display=inline-block）：font-size=14px（此处字体大小根据实际情况自定义）；</p><p>2、采用注释的方式，一般不采用。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>对自适应大小的元素不友好，一般用来给顶宽的元素进行布局。</p><h1 id="响应式设计和布局"><a href="#响应式设计和布局" class="headerlink" title="响应式设计和布局"></a>响应式设计和布局</h1><h3 id="什么是响应式布局"><a href="#什么是响应式布局" class="headerlink" title="什么是响应式布局"></a>什么是响应式布局</h3><p>1、使页面在不同设备上正常使用</p><p>2、一般主要处理屏幕大小的问题</p><p>3、是否有鼠标、是否是读屏、是否支持一些样式</p><h3 id="响应式主要方法："><a href="#响应式主要方法：" class="headerlink" title="响应式主要方法："></a>响应式主要方法：</h3><p>隐藏+折行+自适应空间</p><p>布局结构必须在开始写代码之前就确定好。</p><p>隐藏：确定那一部分在移动端是可以隐藏的</p><p>折行：类似特性列表，从横排变成一行显示一个或两个</p><p>具体方法：</p><p>rem：通过html的字体大小来确定元素字体大小的方法。通过给不同大小的屏幕不同的字号来进行布局。</p><p>viewport：媒体查询，用js或手工确定屏幕多大。</p><p>media query：根据不同设备的特性来匹配不同的样式。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本篇博客主要介绍float布局、inline-block布局和响应式布局。&lt;br&gt;&lt;img src=&quot;/2019/02/17/css布局——float布局/liuyifei.jpg&quot; alt=&quot;刘亦菲&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
      <category term="float" scheme="https://woshilishang123.github.io/tags/float/"/>
    
      <category term="inline-block" scheme="https://woshilishang123.github.io/tags/inline-block/"/>
    
  </entry>
  
  <entry>
    <title>css布局知识点详解</title>
    <link href="https://woshilishang123.github.io/2019/02/16/css%E5%B8%83%E5%B1%80/"/>
    <id>https://woshilishang123.github.io/2019/02/16/css布局/</id>
    <published>2019-02-16T11:42:52.000Z</published>
    <updated>2019-02-17T04:19:29.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css布局基础知识"><a href="#css布局基础知识" class="headerlink" title="css布局基础知识"></a><center>css布局基础知识</center></h1><h2 id="常用的布局方法"><a href="#常用的布局方法" class="headerlink" title="常用的布局方法"></a>常用的布局方法</h2><ol><li><p>table表格布局</p></li><li><p>float浮动＋margin</p></li><li>inline-block布局</li><li>flexbox布局</li></ol><h2 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h2><p><img src="/2019/02/16/css布局/盒模型.jpg" alt="盒模型" title="盒模型"></p><p>盒模型从内到外依次是margin（外边距）、border（边框）、padding（内边距）、content（内容）。一般说的width和height是指content（内容）的宽度和高度。</p><h2 id="display-position属性"><a href="#display-position属性" class="headerlink" title="display/position属性"></a>display/position属性</h2><p>作用：</p><p>&nbsp;&nbsp;· display确定元素的显示类型</p><p>​        &nbsp;&nbsp;&nbsp;· block/inline/inline-block</p><p>&nbsp;&nbsp;·position确定元素的位置</p><p>​        · static（静态、默认）/relative（相对）/absolute（绝对）/fixed（固定）</p><h3 id="block"><a href="#block" class="headerlink" title="block"></a>block</h3><p>  有独立宽高，默认占据一行</p><h3 id="inline"><a href="#inline" class="headerlink" title="inline"></a>inline</h3><p>  和文本一样，默认不会占据一行</p><h3 id="inline-block"><a href="#inline-block" class="headerlink" title="inline-block"></a>inline-block</h3><p>  对外表现像一个inline，对内/内部表现为block。可以有宽高.</p><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><p>静态/默认布局，出现在应该出现的位置。</p><h3 id="relative"><a href="#relative" class="headerlink" title="relative"></a>relative</h3><p>demo:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码块的作用的使class=demo的元素位置相对于其static的位置：离左边10px，里上边10px（向右向下移动10px）。</p><h3 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h3><p>demo:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>元素一旦设置为absolute布局就从文档流中脱离了，后续的元素的位置不受此元素的影响。</p><p>其定位使相对于最近的父级absolute或relative布局的元素位置。</p><h3 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h3><p>demo：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:fixed;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fixed也是脱离文档流的，但其位置使相对于浏览器可视界面的。</p><p>注：定位为<strong>relative、absolute、fixed</strong>布局的元素可以设置z-index属性。z-index属性使元素在<em> &nbsp;z轴 </em>的位置。使用方法为：z-index：2；数值越大位置越靠“上”</p><h1 id="flexbox布局"><a href="#flexbox布局" class="headerlink" title="flexbox布局"></a>flexbox布局</h1><p> 先简单介绍一下用法：父级元素：diaplay：flex；子元素：flex：1 ，2，3，····;flex的数值表示该元素占据的大小。如果子元素要设置为固定宽度：width:80px; flex:none;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css布局基础知识&quot;&gt;&lt;a href=&quot;#css布局基础知识&quot; class=&quot;headerlink&quot; title=&quot;css布局基础知识&quot;&gt;&lt;/a&gt;&lt;center&gt;css布局基础知识&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;常用的布局方法&quot;&gt;&lt;a href=&quot;#常
      
    
    </summary>
    
    
      <category term="-css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>jquery学习笔记</title>
    <link href="https://woshilishang123.github.io/2019/02/15/jquery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://woshilishang123.github.io/2019/02/15/jquery学习笔记/</id>
    <published>2019-02-15T15:54:46.000Z</published>
    <updated>2019-02-15T16:07:59.889Z</updated>
    
    <content type="html"><![CDATA[<h1><center>jquery学习笔记</center></h1> <p><img src="http://dab1nmslvvntp.cloudfront.net/wp-content/uploads/2015/08/1440764020jquery-logo.jpg" alt="jquery-logo" title="jquery-log"></p><p></p><p><img src="/2019/02/15/jquery学习笔记/jquery-logo.jpg" alt="jquery-本地" title="本地"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;center&gt;jquery学习笔记&lt;/center&gt;&lt;/h1&gt; 

&lt;p&gt;&lt;img src=&quot;http://dab1nmslvvntp.cloudfront.net/wp-content/uploads/2015/08/1440764020jquery-logo.jpg
      
    
    </summary>
    
    
      <category term="jquery" scheme="https://woshilishang123.github.io/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>tuzi的第一篇博客</title>
    <link href="https://woshilishang123.github.io/2019/02/15/hello/"/>
    <id>https://woshilishang123.github.io/2019/02/15/hello/</id>
    <published>2019-02-15T09:51:42.000Z</published>
    <updated>2019-02-15T15:34:27.761Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hello-，这是我的第一篇博客！"><a href="#hello-，这是我的第一篇博客！" class="headerlink" title="hello ，这是我的第一篇博客！"></a>hello ，这是我的第一篇博客！</h1><h2 id="记·二月五号早晨做的梦"><a href="#记·二月五号早晨做的梦" class="headerlink" title="记·二月五号早晨做的梦"></a>记·二月五号早晨做的梦</h2><center><br>    <strange>做了个有意思的梦</strange><br>    关于一本书<br>    不知道书名<br>    关于校园和成长<br>    之前梦里读过<br>    今天<br>    书要拍电影<br>    地点选在了我初中<br>    开机前<br>    在一个莫名其妙的晚会<br>    见到了<en>刘亦菲</en><br>    还要了张合影<br><br>    开机仪式就在学校<br>    因为今天是春节吧<br>    只记得一直放炮<br>    不过<br>    快结束的时候<br>    刘亦菲给我发QQ消息<br>    两个人聊了起来<br>    莫名其妙有了刘亦菲QQ<br>    然后就醒了<br>    最后<br>    新年快乐，各位<br></center><div style="float:right">——内容复制自我的说说</div><h2 id="刘亦菲："><a href="#刘亦菲：" class="headerlink" title="刘亦菲："></a>刘亦菲：</h2><p><img src="http://img.jiaodong.net/pic/003/005/434/00300543482_4293c1a5.jpg" alt="刘亦菲" title="刘亦菲"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hello-，这是我的第一篇博客！&quot;&gt;&lt;a href=&quot;#hello-，这是我的第一篇博客！&quot; class=&quot;headerlink&quot; title=&quot;hello ，这是我的第一篇博客！&quot;&gt;&lt;/a&gt;hello ，这是我的第一篇博客！&lt;/h1&gt;&lt;h2 id=&quot;记·二月五
      
    
    </summary>
    
    
      <category term="tuzi" scheme="https://woshilishang123.github.io/tags/tuzi/"/>
    
      <category term="frist" scheme="https://woshilishang123.github.io/tags/frist/"/>
    
  </entry>
  
</feed>
