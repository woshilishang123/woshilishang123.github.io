<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tuzi</title>
  
  <subtitle>兔子BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://woshilishang123.github.io/"/>
  <updated>2019-03-09T02:59:02.440Z</updated>
  <id>https://woshilishang123.github.io/</id>
  
  <author>
    <name>tuzi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javaScript对象</title>
    <link href="https://woshilishang123.github.io/2019/03/09/javaScript%E5%AF%B9%E8%B1%A1/"/>
    <id>https://woshilishang123.github.io/2019/03/09/javaScript对象/</id>
    <published>2019-03-09T02:59:02.000Z</published>
    <updated>2019-03-09T02:59:02.440Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript HTML DOM事件</title>
    <link href="https://woshilishang123.github.io/2019/03/09/javaScriptDOM/"/>
    <id>https://woshilishang123.github.io/2019/03/09/javaScriptDOM/</id>
    <published>2019-03-09T02:18:21.000Z</published>
    <updated>2019-03-09T02:58:15.661Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要讲解HTML DOM（文档对象模型）</p><p><img src="/2019/03/09/javaScriptDOM/liuyifei.jpg" alt="titu" title="题图"> </p><a id="more"></a><h3 id="HTML-DOM-（文档对象模型）"><a href="#HTML-DOM-（文档对象模型）" class="headerlink" title="HTML DOM （文档对象模型）"></a>HTML DOM （文档对象模型）</h3><p>当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）。</p><p>HTML DOM 模型被构造为对象的树。</p><p><img src="/2019/03/09/javaScriptDOM/HTML DOM树.gif" alt="tree" title="HTML DOM树"></p><h4 id="JavaScript能够创建动态的HTML"><a href="#JavaScript能够创建动态的HTML" class="headerlink" title="JavaScript能够创建动态的HTML"></a>JavaScript能够创建动态的HTML</h4><ul><li>JavaScript 能够改变页面中的所有 HTML 元素</li><li>JavaScript 能够改变页面中的所有 HTML 属性</li><li>JavaScript 能够改变页面中的所有 CSS 样式</li><li>JavaScript 能够对页面中的所有事件做出反应</li></ul><h4 id="查找-HTML-元素"><a href="#查找-HTML-元素" class="headerlink" title="查找 HTML 元素"></a>查找 HTML 元素</h4><p>通常，通过 JavaScript，您需要操作 HTML 元素。</p><p>为了做到这件事情，您必须首先找到该元素。有三种方法来做这件事：</p><ul><li>通过 id 找到 HTML 元素</li><li>通过标签名找到 HTML 元素</li><li>通过类名找到 HTML 元素</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="built_in">document</span>.getElementById(<span class="string">"main"</span>);</span><br><span class="line"><span class="keyword">var</span> z=<span class="built_in">document</span>.getElementsByClassName(<span class="string">"main"</span>);</span><br><span class="line"><span class="keyword">var</span> y=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><h3 id="DOM-HTML"><a href="#DOM-HTML" class="headerlink" title="DOM HTML"></a>DOM HTML</h3><p><strong>HTML DOM 允许 JavaScript 改变 HTML 元素的内容。</strong></p><h4 id="改变-HTML-输出流"><a href="#改变-HTML-输出流" class="headerlink" title="改变 HTML 输出流"></a>改变 HTML 输出流</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(Date());//输出时间</span><br></pre></td></tr></table></figure><p><strong>提示：</strong>绝不要使用在文档加载之后使用 document.write()。这会覆盖该文档。</p><h4 id="改变-HTML-内容"><a href="#改变-HTML-内容" class="headerlink" title="改变 HTML 内容"></a>改变 HTML 内容</h4><p>修改 HTML 内容的最简单的方法时使用 innerHTML 属性。</p><p>如需改变 HTML 元素的内容，请使用这个语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(id).innerHTML=<span class="keyword">new</span> HTML;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>).innerHTML=<span class="string">"New text!"</span>;</span><br></pre></td></tr></table></figure><h4 id="改变-HTML-属性"><a href="#改变-HTML-属性" class="headerlink" title="改变 HTML 属性"></a>改变 HTML 属性</h4><p>如需改变 HTML 元素的属性，请使用这个语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(id).attribute=<span class="keyword">new</span> value;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"image"</span>).src=<span class="string">"landscape.jpg"</span>;</span><br></pre></td></tr></table></figure><h3 id="DOM-CSS"><a href="#DOM-CSS" class="headerlink" title="DOM CSS"></a>DOM CSS</h3><h4 id="改变-HTML-样式"><a href="#改变-HTML-样式" class="headerlink" title="改变 HTML 样式"></a>改变 HTML 样式</h4><p>如需改变 HTML 元素的样式，请使用这个语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(id).style.property=<span class="keyword">new</span> style;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"p2"</span>).style.color=<span class="string">"blue"</span>;</span><br></pre></td></tr></table></figure><p><a href="http://www.w3school.com.cn/jsref/dom_obj_style.asp" target="_blank" rel="noopener">HTML DOM Style 对象参考手册</a></p><h3 id="DOM-事件"><a href="#DOM-事件" class="headerlink" title="DOM 事件"></a>DOM 事件</h3><p><strong>HTML DOM 使 JavaScript 有能力对 HTML 事件做出反应。</strong></p><h4 id="对事件做出反应"><a href="#对事件做出反应" class="headerlink" title="对事件做出反应"></a>对事件做出反应</h4><p>我们可以在事件发生时执行 JavaScript，比如当用户在 HTML 元素上点击时。</p><p>如需在用户点击某个元素时执行代码，请向一个 HTML 事件属性添加 JavaScript 代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onclick=JavaScript</span><br></pre></td></tr></table></figure><p>HTML 事件的例子：</p><ul><li>当用户点击鼠标时</li><li>当网页已加载时</li><li>当图像已加载时</li><li>当鼠标移动到元素上时</li><li>当输入字段被改变时</li><li>当提交 HTML 表单时</li><li>当用户触发按键时</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myBtn"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;displayDate()&#125;;</span><br></pre></td></tr></table></figure><h4 id="onload-和-onunload-事件"><a href="#onload-和-onunload-事件" class="headerlink" title="onload 和 onunload 事件"></a>onload 和 onunload 事件</h4><p>onload 和 onunload 事件会在用户进入或离开页面时被触发。</p><p>onload 事件可用于检测访问者的浏览器类型和浏览器版本，并基于这些信息来加载网页的正确版本。</p><p>onload 和 onunload 事件可用于处理 cookie。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"checkCookies()"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="onchange-事件"><a href="#onchange-事件" class="headerlink" title="onchange 事件"></a>onchange 事件</h4><p>onchange 事件常结合对输入字段的验证来使用。</p><p>下面是一个如何使用 onchange 的例子。当用户改变输入字段的内容时，会调用 function() 函数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"fname"</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">onchange</span>=<span class="string">"myFunction()&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    var x=document.getElementById("</span><span class="attr">fname</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">x.value</span>=<span class="string">x.value.toUpperCase();</span></span></span><br><span class="line"><span class="tag">           &#125;"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>当您离开输入字段时，会触发将输入文本转换为大写的函数。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="onmouseover-和-onmouseout-事件"><a href="#onmouseover-和-onmouseout-事件" class="headerlink" title="onmouseover 和 onmouseout 事件"></a>onmouseover 和 onmouseout 事件</h4><p>onmouseover 和 onmouseout 事件可用于在用户的鼠标移至 HTML 元素上方或移出元素时触发函数。</p><h4 id="onmousedown、onmouseup-以及-onclick-事件"><a href="#onmousedown、onmouseup-以及-onclick-事件" class="headerlink" title="onmousedown、onmouseup 以及 onclick 事件"></a>onmousedown、onmouseup 以及 onclick 事件</h4><p>onmousedown, onmouseup 以及 onclick 构成了鼠标点击事件的所有部分。首先当点击鼠标按钮时，会触发 onmousedown 事件，当释放鼠标按钮时，会触发 onmouseup 事件，最后，当完成鼠标点击时，会触发 onclick 事件。</p><h3 id="DOM-节点"><a href="#DOM-节点" class="headerlink" title="DOM 节点"></a>DOM 节点</h3><p><strong>添加和删除节点（HTML 元素）。</strong></p><h4 id="创建新的-HTML-元素"><a href="#创建新的-HTML-元素" class="headerlink" title="创建新的 HTML 元素"></a>创建新的 HTML 元素</h4><p>如需向 HTML DOM 添加新元素，您必须首先创建该元素（元素节点），然后向一个已存在的元素追加该元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>这是另一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> para=<span class="built_in">document</span>.createElement(<span class="string">"p"</span>);<span class="comment">//创建新的 &lt;p&gt; 元素：</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> node=<span class="built_in">document</span>.createTextNode(<span class="string">"这是新段落。"</span>);<span class="comment">//如需向 &lt;p&gt; 元素添加文本，您必须首先创建文本节点。这段代码创建了一个文本节点：</span></span></span><br><span class="line"><span class="javascript">    para.appendChild(node);<span class="comment">//向 &lt;p&gt; 元素追加这个文本节点：</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//向一个已有的元素追加这个新元素。</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> element=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);<span class="comment">//找到一个已有的元素：</span></span></span><br><span class="line"><span class="javascript">    element.appendChild(para);<span class="comment">//向这个已有的元素追加新元素：</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="删除已有的-HTML-元素"><a href="#删除已有的-HTML-元素" class="headerlink" title="删除已有的 HTML 元素"></a>删除已有的 HTML 元素</h4><p>如需删除 HTML 元素，您必须首先获得该元素的父元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>这是另一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> parent=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> child=<span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>);</span></span><br><span class="line"><span class="undefined">    parent.removeChild(child);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要讲解HTML DOM（文档对象模型）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/09/javaScriptDOM/liuyifei.jpg&quot; alt=&quot;titu&quot; title=&quot;题图&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://woshilishang123.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://woshilishang123.github.io/tags/JavaScript/"/>
    
      <category term="DOM事件" scheme="https://woshilishang123.github.io/tags/DOM%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript简介</title>
    <link href="https://woshilishang123.github.io/2019/03/09/javaScript%E7%AE%80%E4%BB%8B/"/>
    <id>https://woshilishang123.github.io/2019/03/09/javaScript简介/</id>
    <published>2019-03-09T01:46:27.000Z</published>
    <updated>2019-03-09T02:21:17.160Z</updated>
    
    <content type="html"><![CDATA[<p>JavaScript是世界上最流行的脚本语言！</p><p><img src="/2019/03/09/javaScript简介/刘亦菲.jpg" alt="titu" title="题图"></p><a id="more"></a><p>JavaScript 是一种脚本，一门编程语言，它可以在网页上实现复杂的功能，网页展现给你的不再是简单的静态信息，而是实时的内容更新，交互式的地图，2D/3D 动画，滚动播放的视频等等。</p><h3 id="您将学到什么"><a href="#您将学到什么" class="headerlink" title="您将学到什么"></a>您将学到什么</h3><h4 id="JavaScript：写入-HTML-输出"><a href="#JavaScript：写入-HTML-输出" class="headerlink" title="JavaScript：写入 HTML 输出"></a>JavaScript：写入 HTML 输出</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;h1&gt;This is a heading&lt;/h1&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;p&gt;This is a paragraph&lt;/p&gt;"</span>);</span><br></pre></td></tr></table></figure><p><strong>提示：</strong>您只能在 HTML 输出中使用 document.write。如果您在文档加载后使用该方法，会覆盖整个文档。</p><h4 id="JavaScript：对事件作出反应"><a href="#JavaScript：对事件作出反应" class="headerlink" title="JavaScript：对事件作出反应"></a>JavaScript：对事件作出反应</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"alert('Welcome!')"</span>&gt;</span>点击这里<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>alert() 函数在 JavaScript 中并不常用，但它对于代码测试非常方便。</p><p>onclick 事件只是您即将在本教程中学到的众多事件之一。</p><h4 id="JavaScript：改变-HTML-内容"><a href="#JavaScript：改变-HTML-内容" class="headerlink" title="JavaScript：改变 HTML 内容"></a>JavaScript：改变 HTML 内容</h4><p>使用 JavaScript 来处理 HTML 内容是非常强大的功能。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>)  <span class="comment">//查找元素</span></span><br><span class="line">x.innerHTML=<span class="string">"Hello JavaScript"</span>;    <span class="comment">//改变内容</span></span><br></pre></td></tr></table></figure><p>您会经常看到 document.getElementByID(“<em>some id</em>“)。这个方法是 HTML DOM 中定义的。</p><p>DOM（文档对象模型）是用以访问 HTML 元素的正式 W3C 标准。</p><p>您将在本教程的多个章节中学到有关 HTML DOM 的知识。</p><h4 id="JavaScript：改变-HTML-图像"><a href="#JavaScript：改变-HTML-图像" class="headerlink" title="JavaScript：改变 HTML 图像"></a>JavaScript：改变 HTML 图像</h4><p>本例会动态地改变 HTML &lt; image&gt; 的来源 (src)：</p><p>The Light bulb</p><p>点击灯泡就可以打开或关闭这盏灯</p><p><a href="http://www.w3school.com.cn/tiy/t.asp?f=js_lightbulb" target="_blank" rel="noopener">亲自试一试</a></p><p>JavaScript 能够改变任意 HTML 元素的大多数属性，而不仅仅是图片。</p><h4 id="JavaScript：改变-HTML-样式"><a href="#JavaScript：改变-HTML-样式" class="headerlink" title="JavaScript：改变 HTML 样式"></a>JavaScript：改变 HTML 样式</h4><p>改变 HTML 元素的样式，属于改变 HTML 属性的变种。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>)  <span class="comment">//找到元素</span></span><br><span class="line">x.style.color=<span class="string">"#ff0000"</span>;           <span class="comment">//改变样式</span></span><br></pre></td></tr></table></figure><h4 id="JavaScript：验证输入"><a href="#JavaScript：验证输入" class="headerlink" title="JavaScript：验证输入"></a>JavaScript：验证输入</h4><p>JavaScript 常用于验证用户的输入。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">isNaN</span>(x) &#123;alert(<span class="string">"Not Numeric"</span>)&#125;;</span><br></pre></td></tr></table></figure><h4 id="您知道吗？"><a href="#您知道吗？" class="headerlink" title="您知道吗？"></a>您知道吗？</h4><p><strong>提示：</strong>JavaScript 与 Java 是两种完全不同的语言，无论在概念还是设计上。</p><p>Java（由 Sun 发明）是更复杂的编程语言。</p><p>ECMA-262 是 JavaScript 标准的官方名称。</p><p>JavaScript 由 Brendan Eich 发明。它于 1995 年出现在 Netscape 中（该浏览器已停止更新），并于 1997 年被 ECMA（一个标准协会）采纳。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript是世界上最流行的脚本语言！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/09/javaScript简介/刘亦菲.jpg&quot; alt=&quot;titu&quot; title=&quot;题图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://woshilishang123.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://woshilishang123.github.io/tags/JavaScript/"/>
    
      <category term="简介" scheme="https://woshilishang123.github.io/tags/%E7%AE%80%E4%BB%8B/"/>
    
  </entry>
  
  <entry>
    <title>css3转换（tranform）</title>
    <link href="https://woshilishang123.github.io/2019/03/08/css3%E8%BD%AC%E6%8D%A2/"/>
    <id>https://woshilishang123.github.io/2019/03/08/css3转换/</id>
    <published>2019-03-08T12:07:04.000Z</published>
    <updated>2019-03-08T12:26:07.365Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要讲解CSS3转换，它包括2d转换，3d转换。</p><p><img src="http://img.hb.aicdn.com/1a872749ff476017c874d820e6fe4799f6fb336c98cc8-rOpK3s_fw658" alt="liuyifei" title="刘亦菲"></p><a id="more"></a><h3 id="CSS3-2D转换"><a href="#CSS3-2D转换" class="headerlink" title="CSS3 2D转换"></a>CSS3 2D转换</h3><p>在部分中，您将学到如下 2D 转换方法：</p><ul><li>translate()</li><li>rotate()</li><li>scale()</li><li>skew()</li></ul><h4 id="translate-方法"><a href="#translate-方法" class="headerlink" title="translate() 方法"></a>translate() 方法</h4><p>通过 translate() 方法，元素从其当前位置移动，根据给定的 left（x 坐标） 和 top（y 坐标） 位置参数：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(50px,100px);</span><br><span class="line"><span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(50px,100px);<span class="comment">/* IE 9 */</span></span><br><span class="line"><span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(50px,100px);<span class="comment">/* Safari and Chrome */</span></span><br><span class="line"><span class="attribute">-o-transform</span>: <span class="built_in">translate</span>(50px,100px);<span class="comment">/* Opera */</span></span><br><span class="line"><span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(50px,100px);<span class="comment">/* Firefox */</span></span><br><span class="line"><span class="comment">/*值 translate(50px,100px) 把元素从左侧移动 50 像素，从顶端移动 100 像素。*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="rotate-方法"><a href="#rotate-方法" class="headerlink" title="rotate() 方法"></a>rotate() 方法</h4><p>通过 rotate() 方法，元素顺时针旋转给定的角度。允许负值，元素将逆时针旋转。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">tranform</span>: <span class="built_in">rotate</span>(30deg);<span class="comment">/*值 rotate(30deg) 把元素顺时针旋转 30 度。*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="scale-方法"><a href="#scale-方法" class="headerlink" title="scale() 方法"></a>scale() 方法</h4><p>通过 scale() 方法，元素的尺寸会增加或减少，根据给定的宽度（X 轴）和高度（Y 轴）参数：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    transform: scale(2,4);;/*值 scale(2,4) 把宽度转换为原始尺寸的 2 倍，把高度转换为原始高度的 4 倍。*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="skew-方法"><a href="#skew-方法" class="headerlink" title="skew() 方法"></a>skew() 方法</h4><p>通过 skew() 方法，元素翻转给定的角度，根据给定的水平线（X 轴）和垂直线（Y 轴）参数：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">tranform</span>: <span class="built_in">skew</span>(30deg,20deg);<span class="comment">/*值 skew(30deg,20deg) 围绕 X 轴把元素翻转 30 度，围绕 Y 轴翻转 20 度。*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-3D转换"><a href="#CSS3-3D转换" class="headerlink" title="CSS3 3D转换"></a>CSS3 3D转换</h3><p>在本章中，您将学到其中的一些 3D 转换方法：</p><ul><li>translate3d()</li><li>rotate3d()</li><li>scale3d()</li><li>skew3d()</li><li>matrix3d()</li></ul><h4 id="rotateX-方法"><a href="#rotateX-方法" class="headerlink" title="rotateX()方法"></a>rotateX()方法</h4><h2 id="rotateX-Y-Z-方法"><a href="#rotateX-Y-Z-方法" class="headerlink" title="rotateX/Y/Z() 方法"></a>rotateX/Y/Z() 方法</h2><p>通过 rotateX() 方法，元素围绕其 X 轴以给定的度数进行旋转。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(120deg);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateX</span>(120deg);<span class="comment">/* Safari 和 Chrome */</span></span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateX</span>(120deg);<span class="comment">/* Firefox */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 rotateY() 方法，元素围绕其 Y 轴以给定的度数进行旋转。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(130deg);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateY</span>(130deg);<span class="comment">/* Safari 和 Chrome */</span></span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateY</span>(130deg);<span class="comment">/* Firefox */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总方法rotate3d(x,y,z,angle);参数不允许省略</p><p>其他3D属性略</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要讲解CSS3转换，它包括2d转换，3d转换。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/1a872749ff476017c874d820e6fe4799f6fb336c98cc8-rOpK3s_fw658&quot; alt=&quot;liuyifei&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/categories/CSS3/"/>
    
    
      <category term="-CSS3 -tranform" scheme="https://woshilishang123.github.io/tags/CSS3-tranform/"/>
    
  </entry>
  
  <entry>
    <title>css3文本和字体</title>
    <link href="https://woshilishang123.github.io/2019/03/08/css3%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E4%BD%93/"/>
    <id>https://woshilishang123.github.io/2019/03/08/css3文本和字体/</id>
    <published>2019-03-08T11:17:05.000Z</published>
    <updated>2019-03-08T12:05:43.437Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要介绍CSS3文本效果和字体。</p><p><img src="http://img.hb.aicdn.com/1077a697883ec1c5fbf527823ac80046572042f1109e9-1VBs2f_fw658" alt="liuyifei" title="刘亦菲"></p><a id="more"></a><h3 id="CSS3文本效果"><a href="#CSS3文本效果" class="headerlink" title="CSS3文本效果"></a>CSS3文本效果</h3><p>CSS3包含多个新的文本特性。在本篇博客中主要讲解：text-shadow和word-wrap属性。</p><h4 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h4><p>Internet Explorer 10、Firefox、Chrome、Safari 以及 Opera 支持 text-shadow 属性。</p><p>所有主流浏览器都支持 word-wrap 属性。</p><p>注释：Internet Explorer 9 以及更早的版本，不支持 text-shadow 属性。</p><h4 id="文本阴影"><a href="#文本阴影" class="headerlink" title="文本阴影"></a>文本阴影</h4><p>text-shadow属性应用于阴影文本</p><p>text-shadow: 水平偏移 竖直偏移 模糊距离 颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line"><span class="attribute">text-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">#FF0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p style="text-shadow: 5px 2px 2px #FF0000;">东吴赤乌白醋维稳成本v我IC不遏必u荣誉本人我把蹙额被称为i不错</p><h4 id="自动换行"><a href="#自动换行" class="headerlink" title="自动换行"></a>自动换行</h4><p>work-break属性：规定非中日韩文本的自动换行规则。</p><p>这个属性对英文的兼容性比较好。</p><p>word-break: normal|break-all|keep-all;<br>normal：使用浏览器默认的换行规则。<br>break-all：允许在单词内换行。<br>keep-all：只能在半角空格或连字符处换行。</p><p>word-wrap属性：允许长单词或 URL 地址换行到下一行。</p><p>word-wrap属性中日韩文本方块字不起效果。</p><p>word-wrap: normal|break-word;<br>normal：只在允许的断字点换行（浏览器保持默认处理）。<br>break-word：在长单词或 URL 地址内部进行换行。</p><h4 id="text-align-last属性"><a href="#text-align-last属性" class="headerlink" title="text-align-last属性"></a>text-align-last属性</h4><p>text-align-last：设置如何对齐最后一行或紧挨着强制换行符之前的行。</p><p>text-align-last：auto| left| right| center| justity（两端对齐)|….</p><p>兼容性不咋地。</p><h4 id="text-overflow-属性"><a href="#text-overflow-属性" class="headerlink" title="text-overflow 属性"></a>text-overflow 属性</h4><p>text-overflow 属性规定当文本溢出包含元素时发生的事情。</p><p>text-overflow: clip|ellipsis|string;<br>clip：修剪文本。<br>ellipsis：显示省略符号来代表被修剪的文本。<br>string：使用给定的字符串来代表被修剪的文本。（此属性兼容性不太好）</p><h3 id="CSS3字体"><a href="#CSS3字体" class="headerlink" title="CSS3字体"></a>CSS3字体</h3><p>本部分主要讲解@font-face的语法规则，取值说明，字体格式和字体的应用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">font-face</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">font-family</span>: &lt;YourWenFontName&gt;;<span class="comment">/*myfont*/</span></span><br><span class="line"><span class="attribute">src</span>: &lt;source&gt;<span class="comment">/*url('Sansation_Bold.ttf'),</span></span><br><span class="line"><span class="comment">     url('Sansation_Bold.eot'); */</span></span><br><span class="line">font-weight:&lt;weight&gt;;</span><br><span class="line">    <span class="attribute">font-style</span>: &lt;style&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: myfont;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>font-family:name    必需。规定字体的名称。</p><p>src:URL    必需。定义字体文件的 URL。</p><p>font-style:normal,italic(斜体）,oblique（倾斜）    可选。定义字体的样式。默认是 “normal”。<br>font-weight：normal,bold,100,200…900    可选。定义字体的粗细。默认是 “normal”。</p><p><a href="https://www.fontsquirrel.com/tools/webfont-generator" target="_blank" rel="noopener">一个字体网站</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要介绍CSS3文本效果和字体。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/1077a697883ec1c5fbf527823ac80046572042f1109e9-1VBs2f_fw658&quot; alt=&quot;liuyifei&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/categories/CSS3/"/>
    
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/tags/CSS3/"/>
    
      <category term="文本" scheme="https://woshilishang123.github.io/tags/%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>css背景与渐变</title>
    <link href="https://woshilishang123.github.io/2019/03/05/css%E8%83%8C%E6%99%AF%E4%B8%8E%E6%B8%90%E5%8F%98/"/>
    <id>https://woshilishang123.github.io/2019/03/05/css背景与渐变/</id>
    <published>2019-03-05T08:32:41.000Z</published>
    <updated>2019-03-07T13:01:24.545Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要介绍CSS3的背景和渐变新增的部分内容</p><p><img src="http://img.hb.aicdn.com/eabb88049007b86e6a15c884f94ddd9ae4494ddb6d451-uTdWm7_fw658 &quot;刘亦菲" alt="liuyifei"></p><a id="more"></a><h3 id="BackGround属性"><a href="#BackGround属性" class="headerlink" title="BackGround属性"></a>BackGround属性</h3><h4 id="background-clip属性"><a href="#background-clip属性" class="headerlink" title="background-clip属性"></a>background-clip属性</h4><p>background-clip属性指定背景绘制区域</p><p>语法：background-clip: border-box | padding-box | content-box;</p><p>背景绘制区域分别是border/padding/content以内区域</p><h4 id="background-origin属性"><a href="#background-origin属性" class="headerlink" title="background-origin属性"></a>background-origin属性</h4><p>background-origin属性指定background-position属性因该是相对位置</p><p>background-origin设置元素背景图片的起始位置</p><p>定义背景图片位置，两个值：水平和垂直偏移量</p><p>语法：background-origin: border-box | padding-box | content-box;</p><h4 id="background-size属性"><a href="#background-size属性" class="headerlink" title="background-size属性"></a>background-size属性</h4><p>background-size属性指定背景图片大小</p><p>语法：background-size: length| percentage| cover| contain;</p><h4 id="background属性整合"><a href="#background属性整合" class="headerlink" title="background属性整合"></a>background属性整合</h4><p>background: color position size repead origin clip attachment image;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#123456</span> center <span class="number">50%</span> no-repeat content-box content-box fixed <span class="built_in">url</span>(<span class="string">"123.png"</span>);</span><br><span class="line">&#125;<span class="comment">/*不建议这样写*/</span></span><br></pre></td></tr></table></figure><h3 id="CSS3渐变"><a href="#CSS3渐变" class="headerlink" title="CSS3渐变"></a>CSS3渐变</h3><p>渐变可以在两个或多个指定的颜色之间显示平稳的过渡。</p><h4 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h4><p>沿着一根轴线改变颜色，从起点到终点进行循序渐变（从一边拉向另一边）。</p><p>语法：background: linear-gradient(direction.,color-stop1, color-stop2, …);</p><p>background: linear-gradient(angle, color-stop1, color-stop2, …);</p><p>可以设置多个渐变色</p><p>direction: to rigiht, to left, to top, to bottom, to right bottom(左上到右下)</p><p>angle: 0deg(从上到下), 45deg, 90deg(从左到右), 233deg, 180(从下到上)， 270（从右到左)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to top left, red, yellow, blue);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(45deg, green, purple, blue);</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(90deg,red 10%, green 50%, purple 75%, blue 100%);<span class="comment">/*red：0%~10%*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(90deg,red 0%, green 50%, purple 65%, blue 85%);</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(90deg,rgba(255, 0, 0, 0) , <span class="built_in">rgba</span>(255,0,0,1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width: 800px; height: 100px; background: linear-gradient(to top left, red, yellow, blue);"></div><p><br></p><div style="width: 800px; height: 100px; background: linear-gradient(45deg, green, purple, blue);"></div><p><br></p><div style="width: 800px; height: 100px; background: linear-gradient(90deg,red 10%, green 50%, purple 75%, blue 100%);"></div><p><br></p><div style="width: 800px; height: 100px; background: linear-gradient(90deg,red 0%, green 50%, purple 65%, blue 85%);"></div><p><br></p><p>第一个颜色默认0%，最后一个颜色默认100%。</p><div style="width: 800px; height: 100px; background: linear-gradient(90deg, rgba(255, 0, 0, 0) , rgba(255,0,0,1));"></div><h5 id="重复渐变"><a href="#重复渐变" class="headerlink" title="重复渐变"></a>重复渐变</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">demo</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">repeating-linear-gradient</span>(90deg,red 0%, blue 10%, red 20%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width: 800px; height: 100px; background: repeating-linear-gradient(90deg,red 0%, blue 10%, red 20%);"></div><h4 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h4><p>径向渐变(radial-gradients)属性：从起点到终点颜色从内到外进行圆形渐变（从中间往外拉）</p><p>语法：background: radial-gradient(center shape size, start-color, …, last-color);</p><p>shape:ellipse(默认), circle</p><div style="width: 200px;            height: 200px;            background: -webkit-radial-gradient(circle, red, blue);            background: radial-gradient(circle, red,yellow, green, blue);"></div><br><br><br><div style="width: 200px;            height: 200px;            background: -webkit-radial-gradient(ellipse, red, yellow, green, blue);            background: radial-gradient(ellipse, red,yellow, green, blue);"></div><p>size: closest-side(最近边),farthest-side(最远边),closest-corner(最近角),farthest-cornet(最远角)</p><div style="width: 200px;            height: 200px;            background: -webkit-radial-gradient(closest-side, red, blue);            background: radial-gradient(closest-side, red,yellow, green, blue);"></div><p><br></p><div style="width: 200px;            height: 200px;            background: -webkit-radial-gradient(closest-corner, red, blue);            background: radial-gradient(closest-corner, red,yellow, green, blue);"></div><p><br></p><div style="width: 200px;            height: 200px;            background: -webkit-radial-gradient(farthest-side, red, blue);            background: radial-gradient(farthest-side, red,yellow, green, blue);"></div><p><br></p><div style="width: 200px;            height: 200px;            background: -webkit-radial-gradient(30% 70%, farthest-corner, red, blue);            background: radial-gradient(30% 70%, farthest-corner, red, blue);"></div><h5 id="重复渐变-1"><a href="#重复渐变-1" class="headerlink" title="重复渐变"></a>重复渐变</h5><div style="width: 200px;            height: 200px;            background: -webkit-repeating-radial-gradient(red 0%, blue 15% ,red 30);            background: repeating-radial-gradient(red 0%, blue 15% ,red 30);">chrome不支持</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要介绍CSS3的背景和渐变新增的部分内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/eabb88049007b86e6a15c884f94ddd9ae4494ddb6d451-uTdWm7_fw658 &amp;quot;刘亦菲&quot; alt=&quot;liuyifei&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/categories/CSS3/"/>
    
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/tags/CSS3/"/>
    
      <category term="背景" scheme="https://woshilishang123.github.io/tags/%E8%83%8C%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>CSS3边框与圆角</title>
    <link href="https://woshilishang123.github.io/2019/03/05/css%E8%BE%B9%E6%A1%86%E4%B8%8E%E5%9C%86%E8%A7%92/"/>
    <id>https://woshilishang123.github.io/2019/03/05/css边框与圆角/</id>
    <published>2019-03-05T07:42:23.000Z</published>
    <updated>2019-03-05T08:30:04.722Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要讲解CSS3的圆角，盒阴影和边界图片。</p><p><img src="/2019/03/05/css边框与圆角/刘亦菲.jpg" alt="liuyifei" title="liuyifei"></p><a id="more"></a><h3 id="CSS3圆角"><a href="#CSS3圆角" class="headerlink" title="CSS3圆角"></a>CSS3圆角</h3><h4 id="border-radius属性"><a href="#border-radius属性" class="headerlink" title="border-radius属性"></a>border-radius属性</h4><p>此部分内容在博客<a href="https://woshilishang123.github.io/2019/02/26/css%E6%95%88%E6%9E%9C/" style="text-decoration: none">css效果</a>里面已经介绍过了。</p><p>四个值 ：左上角  右上角 右下角 左下角 </p><p>三个值：左上角  右上角和左下角  右下角 </p><p>考虑兼容性问题，可以加上前缀。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">-webkit-broder-radius</span>: <span class="number">50%</span>;<span class="comment">/*chrome*/</span></span><br><span class="line">       <span class="attribute">-moz-broder-radius</span>: <span class="number">50%</span>;<span class="comment">/*firefox*/</span></span><br><span class="line">    <span class="attribute">-ms-broder-radius</span>: <span class="number">50%</span>;<span class="comment">/*IE*/</span></span><br><span class="line">    <span class="attribute">-o-broder-radius</span>: <span class="number">50%</span>;<span class="comment">/*opera*/</span></span><br><span class="line">    <span class="attribute">broder-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="盒阴影-box-shadow"><a href="#盒阴影-box-shadow" class="headerlink" title="盒阴影 box-shadow"></a>盒阴影 box-shadow</h4><p>此部分内容在博客<a href="https://woshilishang123.github.io/2019/02/26/css%E6%95%88%E6%9E%9C/" style="text-decoration: none">css效果</a>里面已经介绍过了。</p><h4 id="边界图片-border-image"><a href="#边界图片-border-image" class="headerlink" title="边界图片 border-image"></a>边界图片 border-image</h4><p>使用border-image-*属性来构建美丽的可扩展按钮。</p><p>语法：border-image: source slice width outset repeat;</p><p> border-image-source: 指定要使用的图像 ;<br> border-image-slice: 指定图像的边界向内偏移多少;<br> border-image-width: 指定图像边界的宽度;<br> border-image-outset: 指定在边框的外部绘制border-image-area的量;<br> border-image-repeat:  边界是否应重复repeated，拉伸stretched，或铺满rounded; </p><p>slice和width是相关联的。个人觉得使用%较好。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border-image-source</span>: <span class="built_in">url</span>(<span class="string">"boder.jpg"</span>);</span><br><span class="line">    <span class="attribute">border-image-slice</span>: number/%/fill;<span class="comment">/*10%*/</span></span><br><span class="line">    <span class="attribute">border-image-width</span>: number/%/auto;<span class="comment">/*auto：自动/自适应*/</span></span><br><span class="line">    <span class="attribute">border-image-outset</span>: length/number;</span><br><span class="line">    <span class="attribute">border-image-repeat</span>: stretch/repeat/round/initial/inherit;<span class="comment">/*默认：stretch；inittial：读取默认值；inherit：继承父元素*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要讲解CSS3的圆角，盒阴影和边界图片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/05/css边框与圆角/刘亦菲.jpg&quot; alt=&quot;liuyifei&quot; title=&quot;liuyifei&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/categories/CSS3/"/>
    
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/tags/CSS3/"/>
    
      <category term="圆角" scheme="https://woshilishang123.github.io/tags/%E5%9C%86%E8%A7%92/"/>
    
  </entry>
  
  <entry>
    <title>css3选择器</title>
    <link href="https://woshilishang123.github.io/2019/03/04/css3%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://woshilishang123.github.io/2019/03/04/css3选择器/</id>
    <published>2019-03-04T12:04:26.000Z</published>
    <updated>2019-03-05T07:36:33.940Z</updated>
    
    <content type="html"><![CDATA[<p>本博客主要介绍CSS3新增选择器</p><p><img src="/2019/03/04/css3选择器/liuyifei.jpg" alt="liuyifei" title="刘亦菲"></p><a id="more"></a><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><p>CSS3发布之前，CSS基本选择器有：通配符选择器（*），元素选择器（div），ID选择器（#id），类选择器（#），后台选择器（空格)。</p><p>CSS3新增的基本选择器有子元素选择器，相邻兄弟元素选择器，通用兄弟选择器和群组选择器。</p><h4 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h4><p>子元素选择器只能选择某元素的子元素</p><p>语法：父元素 &gt; 子元素</p><h4 id="相邻兄弟元素选择器"><a href="#相邻兄弟元素选择器" class="headerlink" title="相邻兄弟元素选择器"></a>相邻兄弟元素选择器</h4><p>相邻兄弟元素选择器可以选择紧接在另一个元素后的元素，而且他们具有一个相同的父元素。</p><p>语法：元素 + 兄弟相邻元素（第一个）{}</p><h4 id="通用兄弟元素选择器"><a href="#通用兄弟元素选择器" class="headerlink" title="通用兄弟元素选择器"></a>通用兄弟元素选择器</h4><p>通用兄弟元素选择器可以选择某元素后的所有兄弟元素，而且他们具有一个相同的父元素。</p><p>语法：元素 ~  后面所有兄弟相邻元素{}</p><h4 id="群组选择器"><a href="#群组选择器" class="headerlink" title="群组选择器"></a>群组选择器</h4><p>群组选择器是将具有相同样式的元素分组在一起，每个选择器之间使用逗号“，”隔开</p><p>语法：元素1，元素2，元素3{CSS语句}</p><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><p><strong>对带有<mark>指定属性</mark>的HTML元素设置样式</strong></p><p>使用CSS3属性选择器，你可以只指定元素的某个属性，或者你还可以同时指定元素的某个属性和其对应的属性值。</p><h4 id="ELement-attribute"><a href="#ELement-attribute" class="headerlink" title="ELement[attribute]"></a>ELement[attribute]</h4><p>为带有<mark>attribute</mark>属性的Element元素设置样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href]</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;<span class="comment">/*所有的a并且有href属性的标签*/</span></span><br></pre></td></tr></table></figure><h4 id="ELement-attribute-”value”"><a href="#ELement-attribute-”value”" class="headerlink" title="ELement[attribute=”value”]"></a>ELement[attribute=”value”]</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[href="www.123.com"]</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;<span class="comment">/*所有的a并且有href===www.123.com属性的标签*/</span></span><br></pre></td></tr></table></figure><h4 id="ELement-attribute-”value”-1"><a href="#ELement-attribute-”value”-1" class="headerlink" title="ELement[attribute~=”value”]"></a>ELement[attribute~=”value”]</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class~="two"]</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;<span class="comment">/*&lt;p class="two three"/class="one two"&gt;属性的标签;匹配含有class===two*/</span></span><br></pre></td></tr></table></figure><h4 id="ELement-attribute-”value”-2"><a href="#ELement-attribute-”value”-2" class="headerlink" title="ELement[attribute*=”value”]"></a>ELement[attribute*=”value”]</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class*="tw"]</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;<span class="comment">/*匹配包含vaue或以value-开头的元素class*/</span></span><br></pre></td></tr></table></figure><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>伪元素选择器包括：动态伪类(锚点伪类、用户行为伪类)</p><p>UI元素状态选择器</p><p>CSS3结构类</p><p>否定选择器</p><p>伪元素选择器</p><h4 id="动态伪类"><a href="#动态伪类" class="headerlink" title="动态伪类"></a>动态伪类</h4><p>这些动态伪类并不存在于HTML中，只有当用户与网站<mark>交互</mark>的时候才能体现出来</p><p><strong>锚点伪类</strong></p><p>:link (蓝色链接), :visited(访问过的链接)</p><p><strong>用户行为伪类</strong></p><p>:hover(鼠标经过), :active(点击时), :focus(获取鼠标)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#00ffff</span>;</span><br><span class="line">&#125;<span class="comment">/*也可以用于其他元素*/</span></span><br></pre></td></tr></table></figure><h4 id="UI元素状态伪类"><a href="#UI元素状态伪类" class="headerlink" title="UI元素状态伪类"></a>UI元素状态伪类</h4><p>我们把“:enabled”(可输入的), “:disabled”(不可输入的), “:checked”(选中的)伪类成为UI元素状态伪类</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:enabled</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:disabled</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">enable</span>=<span class="string">"enable"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"check"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="CSS3结构类"><a href="#CSS3结构类" class="headerlink" title="CSS3结构类"></a>CSS3结构类</h4><p><strong>CSS3的：nth选择器</strong></p><p>我们把CSS3的：nth选择器也称为CSS3结构类</p><p><strong>选择方法</strong></p><p>:first-child, :last-child, :nth-child(), :nth-last-child(), :nth-of-type(), </p><p>:nth-last-of-type(), :first-of-type, :last-of-type, :only-child, :only-of type, :empty</p><h5 id="first-child-last-child-nth-child-nth-last-child"><a href="#first-child-last-child-nth-child-nth-last-child" class="headerlink" title=":first-child, :last-child, :nth-child(),:nth-last-child()"></a>:first-child, :last-child, :nth-child(),:nth-last-child()</h5><p><strong>这四个伪类针对子元素，比如div:nth-child()针对div的子元素</strong></p><p>div:first-child：选择属于其父元素的<mark>首个子元素</mark>是div的div元素，并为其设置样式</p><p>:last-child：选择属于父元素的<mark>最后一个子元素</mark>的Element元素，并为其设置样式</p><p>:nth-child(N)：匹配属于其父元素的<mark>第N个子元素</mark>，不论元素的类型。</p><p> :nth-last-child(N)：匹配属于父元素的倒数第N个子元素的每个元素，不论元素的类型，从最后一个元素开始计数。</p><p>扩展：</p><p>第一个元素的下标是1。</p><p>:nth-child(n)：n是一个简单的表达式，取值从“0”开始计算。这里只能是“n”，不能用其他字母替换。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;<span class="comment">/*匹配第二个元素*/</span></span><br><span class="line"><span class="selector-class">.demo</span><span class="selector-pseudo">:nth-child(n)</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;<span class="comment">/*匹配所有元素*/</span></span><br><span class="line">.demo:nth-child(odd/2n+1)&#123;</span><br><span class="line">    <span class="selector-tag">color</span>:<span class="selector-id">#123456</span>;</span><br><span class="line">&#125;<span class="comment">/*匹配奇数元素*/</span></span><br><span class="line">.demo:nth-child(even/2n)&#123;</span><br><span class="line">    <span class="selector-tag">color</span>:<span class="selector-id">#123456</span>;</span><br><span class="line">&#125;<span class="comment">/*匹配偶数元素*/</span></span><br><span class="line"><span class="selector-class">.demo</span><span class="selector-pseudo">:nth-child(3n+1)</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;<span class="comment">/*3n+1*/</span></span><br><span class="line"><span class="selector-class">.demo</span><span class="selector-pseudo">:nth-child(n</span>*<span class="selector-tag">n</span>)&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#123456</span>;</span><br><span class="line">&#125;<span class="comment">/*错误*/</span></span><br></pre></td></tr></table></figure><h5 id="nth-of-type-nth-last-of-type-first-of-type-last-of-type-one-child-only-of-type"><a href="#nth-of-type-nth-last-of-type-first-of-type-last-of-type-one-child-only-of-type" class="headerlink" title=":nth-of-type(), :nth-last-of-type(), :first-of-type, :last-of-type,:one-child, :only-of type"></a>:nth-of-type(), :nth-last-of-type(), :first-of-type, :last-of-type,:one-child, :only-of type</h5><p><strong>这几个伪类针对同名元素，比如div:nth-of-type(N)针对div元素</strong></p><p>div:nth-of-type(N)：匹配属于父元素的<mark>特定类型</mark>（div）第N个子元素（div）的每个元素。所有的属于其父元素（所有元素）第N个div。</p><p> :nth-last-of-type(), :first-of-type, :last-of-type：略</p><p>div:one-child：针对没有兄弟元素的div元素，比如div:only-of type只有一个div但有两个兄弟元素为p，不会被选中</p><p>:only-of type：选择器匹配属于其父元素的特定类型的唯一子元素的每个元素，比如div:only-of type只有一个div但有两个兄弟元素为p，仍会被选中</p><h5 id="empty"><a href="#empty" class="headerlink" title=":empty"></a>:empty</h5><p>:empty选择器匹配没有子元素（包括文本节点）的每个元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--目标元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>124<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="否定选择器（-not）"><a href="#否定选择器（-not）" class="headerlink" title="否定选择器（:not）"></a>否定选择器（:not）</h4><p>:not(ELement/selector)选择器匹配非指定元素/选择器的每个元素。</p><p>语法：父元素:not(子元素/子选择器) ；father:not(chidren/selector)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:not(p)</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;<span class="comment">/*不选择p*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:not(last-of-type)</span>&#123;</span><br><span class="line">    <span class="attribute">border-right</span>:<span class="number">1px</span> solid red;</span><br><span class="line">&#125;<span class="comment">/*不选择最后一个a*/</span></span><br></pre></td></tr></table></figure><h4 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h4><p>伪元素用于像某些选择器设置特殊效果。</p><p>语法：元素<mark>::</mark>伪元素 / 元素<mark>:</mark>伪元素</p><h5 id="CSS权重"><a href="#CSS权重" class="headerlink" title="CSS权重"></a>CSS权重</h5><p>什么是权重：当很多的规则被应用到某一个元素上时，权重是一个决定哪种规则生效，或者是优先级的过程。</p><p>权重等级与权重：行内样式（1000）&gt;id选择器（100）&gt;类，属性选择器和伪类选择器(10)&gt;元素和伪元素(1)&gt;*(0)</p><p>行内样式：&lt; div style=” “ &gt; &lt; /div &gt;,style里面的样式就是行内样式</p><p>权重相同的连个css样式，后面的会覆盖前面的样式</p><h5 id="first-line"><a href="#first-line" class="headerlink" title="first-line"></a>first-line</h5><p>根据“first-line”伪元素中的样式对元素的<mark>第一行文本</mark>进行格式化/执行css样式。first-line伪元素只能用于块级元素。</p><h5 id="first-letter"><a href="#first-letter" class="headerlink" title="first-letter"></a>first-letter</h5><p>用于向文本的<mark>首字母</mark>设置样式。</p><p>first-letter只能用于块级元素</p><h5 id="before"><a href="#before" class="headerlink" title="before"></a>before</h5><p>在元素的<strong>内容</strong><mark>前面</mark>插入新内容</p><p>常用”content”配合使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">"我在内容的前面"</span>;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">border-right</span>:<span class="number">1px</span> solid green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特点：父元素（例如demo里的div)的第一个子元素; 是个行级元素； 内容通过content写入，支持所有的css样式；标签里面找不到</p><h5 id="after"><a href="#after" class="headerlink" title="after"></a>after</h5><p>在元素的<strong>内容</strong><mark>后面</mark>插入新内容</p><p>多用于清除浮动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    display= block;</span><br><span class="line">    <span class="selector-tag">content</span>: "";</span><br><span class="line">    <span class="selector-tag">clear</span>: <span class="selector-tag">both</span>;<span class="comment">/*清除浮动*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">aisde</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">article</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span>&gt;</span>12<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span>123<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="selsection"><a href="#selsection" class="headerlink" title="selsection"></a>selsection</h5><p>用于设置浏览器中<strong>选中</strong>文本后的背景色和前景色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: white;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::selection</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本博客主要介绍CSS3新增选择器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/04/css3选择器/liuyifei.jpg&quot; alt=&quot;liuyifei&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/categories/CSS3/"/>
    
    
      <category term="CSS3" scheme="https://woshilishang123.github.io/tags/CSS3/"/>
    
      <category term="前端" scheme="https://woshilishang123.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>html5表单和input</title>
    <link href="https://woshilishang123.github.io/2019/03/04/html5%E8%A1%A8%E5%8D%95%E5%92%8Cinput/"/>
    <id>https://woshilishang123.github.io/2019/03/04/html5表单和input/</id>
    <published>2019-03-04T08:28:10.000Z</published>
    <updated>2019-03-04T11:51:35.138Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要介绍HTML5的属性变化和表单验证。</p><p><img src="/2019/03/04/html5表单和input/liuyifei.jpg" alt="liuyifei" title="liuyifei"></p><a id="more"></a><h3 id="HTML5属性变化"><a href="#HTML5属性变化" class="headerlink" title="HTML5属性变化"></a>HTML5属性变化</h3><h4 id="input新增属性"><a href="#input新增属性" class="headerlink" title="input新增属性"></a>input新增属性</h4><h5 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><center><input type="email" name="email" value="demo@tuzi.com"></center><h5 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;url&quot; name=&quot;url&quot;&gt;&lt;/input&gt;</span><br></pre></td></tr></table></figure><center><input type="url" name="url" value="www.tuzi.com"></center><h5 id="电话号码"><a href="#电话号码" class="headerlink" title="电话号码"></a>电话号码</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">name</span>=<span class="string">"tel"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><center><input type="tel" name="tel" value="13888888888"></center><h5 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"number"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><center><input type="number" name="number" value="1234567890"></center><h5 id="Date-Pickers"><a href="#Date-Pickers" class="headerlink" title="Date Pickers"></a>Date Pickers</h5><p>此input类型包括Date,Month,Week,Time, DateTime(选取时间，日，月，年-使用UTC时间),Date-local(本地时间)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    Date:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"date"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div><br>    Date:<br>    <input type="date" name="date"><br></div><h5 id="Range-Search-Color"><a href="#Range-Search-Color" class="headerlink" title="Range Search Color"></a>Range Search Color</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">name</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"1"</span> <span class="attr">max</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"search"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"color"</span> <span class="attr">name</span>=<span class="string">"color"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div><br>    <input type="range" name="range" min="1" max="10" value="7"><br>    <input type="search" name="search" value="search"><br>    <input type="color" name="color" value="#aaffdd"><br></div><h4 id="表单属性"><a href="#表单属性" class="headerlink" title="表单属性"></a>表单属性</h4><h5 id="autocomplete属性"><a href="#autocomplete属性" class="headerlink" title="autocomplete属性"></a>autocomplete属性</h5><p>自动完成(autocomplete)属性,再次打开网页，网页会记住上次提交的内容。</p><p>form或input域应该拥有自动完成功能</p><p>&lt; form autocomplete=”on/off”&gt;&lt; /form&gt;</p><p>PS:autocomplete适用于&lt; form &gt;标签，以及以下类型的&lt; input &gt;标签：text, search, url, telephone, email, password,  datepickers, range, color。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.baidu.com"</span> <span class="attr">autocomplete</span>=<span class="string">"on"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form action="https://ww.baidu.com" autocomplete="on"><br>    <input type="text" name="text"><br>    <input type="text" name="text" autocomplete="off"><br>    <input type="submit"><br></form><h5 id="autofocus属性"><a href="#autofocus属性" class="headerlink" title="autofocus属性"></a>autofocus属性</h5><p>规定在页面加载时，域自动地获得焦点。</p><p>autofocus属性使用与所有的&lt; input&gt;标签的类型。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span> <span class="attr">autofocus</span>=<span class="string">"autofocus"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span>/*用法:autofocus=”autofocus“*/</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form action="https://ww.baidu.com"><br>    <input type="text" name="text"><br>    <input type="text" name="text" autofocus="autofocus"><br>    <input type="submit"><br></form><h5 id="multiple-ˈməltəpəl"><a href="#multiple-ˈməltəpəl" class="headerlink" title="multiple(ˈməltəpəl)"></a>multiple(ˈməltəpəl)</h5><p>规定输入域中可选择<mark>多</mark>个值</p><p>PS：multiple属性适用于以下类型的&lt; input&gt;标签：email and file</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span></span><br><span class="line">    请选择文件</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> <span class="attr">value</span>=<span class="string">"123@qq.com,234@qq.com"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span>/*形成数组发到后台,若无multiple则形成一个字符串发送到后台*/</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">/*用法:multiple="multiple"*/</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form action="https://ww.baidu.com"><br>    只能选择一个文件<br>    <input type="file" name="file"><br>    <input type="email" name="email" multiple="multiple" value="123@qq.com,234@qq.com"><br>    只能选择<mark>多个</mark>文件<br>    <input type="file" name="file" multiple="multiple"><br>    <input type="submit"><br></form><h5 id="placeholder属性"><a href="#placeholder属性" class="headerlink" title="placeholder属性"></a>placeholder属性</h5><p>提供一种提示（hint），描述输入域期待的值</p><p>适用于&lt; input&gt;标签type属性值为：text, search, telephone, email, password。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://ww.baidu.com"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span> <span class="attr">autofocus</span>=<span class="string">"autofocus"</span> <span class="attr">placeholder</span>=<span class="string">"请输入你的银行卡密码"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form action="https://ww.baidu.com"><br>    <input type="text" name="text"><br>    <input type="text" name="text" autofocus="autofocus" placeholder="请输入你的银行卡密码"><br>    <input type="submit"><br></form><h5 id="required属性"><a href="#required属性" class="headerlink" title="required属性"></a>required属性</h5><p>规定必须再提交之前填写输入域（不能为空）</p><p>减少前端开发人员写表单验证的压力。</p><p>required适用于&lt; form &gt;标签，以及以下类型的&lt; input &gt;标签：text, search, url, telephone, email, password,  date pickers, number, checkbox,radio,file。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"text"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">required</span>=<span class="string">"required"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form action="https://www.baidu.com"><br>    <input type="text" name="text" required="required"><br>    <input type="email" name="email" required="required"><br>    <input type="submit"><br></form><h5 id="链接属性"><a href="#链接属性" class="headerlink" title="链接属性"></a>链接属性</h5><h6 id="sizes"><a href="#sizes" class="headerlink" title="sizes"></a>sizes</h6><p>sizes用在&lt; link&gt;里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"icon.gif"</span> <span class="attr">type</span>=<span class="string">"image/gif"</span> <span class="attr">sizes</span>=<span class="string">"16X16"</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="target"><a href="#target" class="headerlink" title="target"></a>target</h6><p>target用在base里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"http://localhost/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>/*控制整个网页的超链接<span class="tag">&lt; <span class="attr">a</span> &gt;</span>*/</span><br></pre></td></tr></table></figure><h6 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h6><p>a:media=””(表示对设备进行优化，handheld对“手持”设备进行支持，tv对“电视”设备进行支持)；</p><p>a:hreflang= “zh-CN”（设置语言）</p><p>a:rel=“external”（设置超链接的引用，这里超链接为外部链接）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要介绍HTML5的属性变化和表单验证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/04/html5表单和input/liuyifei.jpg&quot; alt=&quot;liuyifei&quot; title=&quot;liuyifei&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="https://woshilishang123.github.io/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="https://woshilishang123.github.io/tags/HTML5/"/>
    
      <category term="表单" scheme="https://woshilishang123.github.io/tags/%E8%A1%A8%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>html5表单</title>
    <link href="https://woshilishang123.github.io/2019/03/02/html5%E8%A1%A8%E5%8D%95/"/>
    <id>https://woshilishang123.github.io/2019/03/02/html5表单/</id>
    <published>2019-03-02T11:55:54.000Z</published>
    <updated>2019-03-02T11:55:54.606Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML5之网页布局</title>
    <link href="https://woshilishang123.github.io/2019/03/02/html5%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80/"/>
    <id>https://woshilishang123.github.io/2019/03/02/html5网页布局/</id>
    <published>2019-03-02T04:58:37.000Z</published>
    <updated>2019-03-02T05:31:33.177Z</updated>
    
    <content type="html"><![CDATA[<p>本博客主要介绍HTML5中新增的header等元素对网页整体框架布局的影响。</p><p><img src="/2019/03/02/html5网页布局/logo.jpg" alt="logo" title="liuyifei"></p><a id="more"></a><h3 id="传统布局"><a href="#传统布局" class="headerlink" title="传统布局"></a>传统布局</h3><p><img src="/2019/03/02/html5网页布局/传统布局.jpg" alt="传统布局" title="传统布局"></p><h3 id="HTML5布局"><a href="#HTML5布局" class="headerlink" title="HTML5布局"></a>HTML5布局</h3><p><img src="/2019/03/02/html5网页布局/HTML5布局.jpg" alt="HTML5布局"></p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>HTML5布局结构更加直白明了。</p><p>1、语义化 ：HTML5可以让很多更语义化的结构代码标签代替大量无意义的div标签。这种语义化的特性提升了网页的质量和语义。减少了以前用于css调用class和id属性。</p><p>2、 对搜索引擎的友好。新的结构标签带买的是网页布局的改变及提升对搜索引擎的友好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本博客主要介绍HTML5中新增的header等元素对网页整体框架布局的影响。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/02/html5网页布局/logo.jpg&quot; alt=&quot;logo&quot; title=&quot;liuyifei&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML5" scheme="https://woshilishang123.github.io/tags/HTML5/"/>
    
      <category term="网页布局" scheme="https://woshilishang123.github.io/tags/%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>走进HTML5</title>
    <link href="https://woshilishang123.github.io/2019/03/01/%E8%B5%B0%E8%BF%9BHTML5/"/>
    <id>https://woshilishang123.github.io/2019/03/01/走进HTML5/</id>
    <published>2019-03-01T08:12:59.000Z</published>
    <updated>2019-03-01T12:32:52.959Z</updated>
    
    <content type="html"><![CDATA[<p>2014年，HTML5发布。</p><p><img src="/2019/03/01/走进HTML5/logo.jpg" alt="logo" title="liuyifei"></p><a id="more"></a><h3 id="HTML5的变化"><a href="#HTML5的变化" class="headerlink" title="HTML5的变化"></a>HTML5的变化</h3><p>WebAPP：HTML5新增了离线存储、更丰富的表单、js线程、socket、标准扩展embed、css3……</p><p>可以使用开发网页的方式开发webAPP</p><p>新增了流媒体与多媒体引擎 ：Audio、vedio、webgldengdeng</p><p>在移动互联网方面的优势：</p><p>1、跨平台：HTML5是唯一一个通吃PC、Mac、iPhone、Android等主流平台的跨平台语言。</p><p>2、快速迭代</p><p>3、减低成本：HTML5开发比原生APP开发成本降低一倍。</p><p>4、导流入口多：HTML5应用导流非常容易。</p><p>5、分发效率高</p><h3 id="lt-DCOTYPE-gt-标签"><a href="#lt-DCOTYPE-gt-标签" class="headerlink" title="&lt;!DCOTYPE&gt;标签"></a>&lt;!DCOTYPE&gt;标签</h3><h4 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h4><p>&lt;!DCOTYPE&gt;声明必须是HTML文档的第一行，位于&lt; html &gt;标签之前。 </p><p>&lt;!DCOTYPE&gt;不是HTML标签，它用来指示web浏览器关于页面使用哪个HTML版本进行编写的指令。</p><h3 id="HTML中新增的标签"><a href="#HTML中新增的标签" class="headerlink" title="HTML中新增的标签"></a>HTML中新增的标签</h3><h4 id="结构标签"><a href="#结构标签" class="headerlink" title="结构标签"></a>结构标签</h4><p>结构标签（块状元素）——有意义的div</p><p>&lt; artical &gt;  标记定义一篇文章。</p><p>&lt; header &gt; 标记定义一个页面或一个区域的头部</p><p>&lt; nav &gt; 标记定义导航链接</p><p>&lt; section&gt; 标记定义一个区域；在网页中用途比较大</p><p>&lt; aside &gt; 标记定义页面内容部分的侧边栏</p><p>&lt; hgroup&gt; 标记定义文件中一个区块的相关信息</p><p>&lt; figure &gt; 标记定义一组媒体内容以及它们的标题</p><p>&lt; figcaption&gt; 标记定义fgroup元素的标题</p><p>&lt; footer &gt; 标记定义一个页面或一个区域的底部</p><p>&lt; dialog &gt; 标记定义一个对话框（会话框）类似微信</p><p>补充：1、header/secton/aside/article/footer里面不要嵌套使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>错案案例<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、级别：header/secton/footer &gt; aside/article/figure/hgroup/nav &gt; div/figcaption</p><p>3、具体标签使用见《布局部分》</p><h4 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h4><h5 id="lt-video-gt"><a href="#lt-video-gt" class="headerlink" title="&lt; video &gt;"></a>&lt; video &gt;</h5><p>标记定义一个视频</p><p>demo:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vedio</span> <span class="attr">src</span>=<span class="string">"../123.mp4"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">vedio</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="lt-audio-gt"><a href="#lt-audio-gt" class="headerlink" title="&lt; audio &gt;"></a>&lt; audio &gt;</h5><p>标记定义音频内容</p><p>demo：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"../123.mp3"</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span> <span class="attr">loop</span>=<span class="string">"-1"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></span><br><span class="line">    autoplay:播放 loop="-1"：无限循环 controls:出现音频控制器</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29274073&auto=1&height=66"></iframe><h5 id="lt-source-gt"><a href="#lt-source-gt" class="headerlink" title="&lt; source &gt;"></a>&lt; source &gt;</h5><p>标记定义媒体资源</p><p>demo1:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"../123.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mpeg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>demo2:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vedio</span> <span class="attr">autoplay</span>=<span class="string">"autoplay"</span> <span class="attr">width</span>=<span class="string">"1024"</span> <span class="attr">height</span>=<span class="string">"768"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"../123.mp4"</span> <span class="attr">type</span>=<span class="string">"vedio/mp4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">vedio</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="lt-canvas-gt"><a href="#lt-canvas-gt" class="headerlink" title="&lt; canvas &gt;"></a>&lt; canvas &gt;</h5><p>标记定义图片</p><h5 id="lt-embed-gt"><a href="#lt-embed-gt" class="headerlink" title="&lt; embed &gt;"></a>&lt; embed &gt;</h5><p>标记定义外部的可交互的内容或插件，比如flashdemo：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">"../123.swf"</span> <span class="attr">width</span>=<span class="string">"1024"</span> <span class="attr">height</span>=<span class="string">"768"</span>&gt;</span></span><br><span class="line">插入了一个flash文件</span><br><span class="line"><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h5><p>多媒体标签的出现意味着富媒体的发展以及不适用插件的情况先即可操作媒体文件，极大地提升了用户体验。</p><h4 id="Web应用标签"><a href="#Web应用标签" class="headerlink" title="Web应用标签"></a>Web应用标签</h4><h5 id="状态标签"><a href="#状态标签" class="headerlink" title="状态标签"></a>状态标签</h5><p>&lt; meter &gt; 状态标签（实时状态显示：气温气压）</p><p>&lt; progress &gt; 状态标签（任务过程：安装、卸载）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">value</span>=<span class="string">"180"</span> <span class="attr">min</span>=<span class="string">"20"</span> <span class="attr">max</span>=<span class="string">"380"</span> <span class="attr">low</span>=<span class="string">"200"</span> <span class="attr">high</span>=<span class="string">"240"</span> <span class="attr">optimum</span>=<span class="string">"220"</span>&gt;</span></span><br><span class="line">    demo1:电压</span><br><span class="line">    optimum:最佳值</span><br><span class="line"><span class="tag">&lt;/<span class="name">meter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">value</span>=<span class="string">"0.75"</span>&gt;</span>75%<span class="tag">&lt;/<span class="name">meter</span>&gt;</span></span><br></pre></td></tr></table></figure><meter value="180" min="20" max="380" low="200" high="240" optimum="220"><br>    demo1:电压<br>    optimum:最佳值<br></meter><meter value="0.75">75%</meter><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">value</span>=<span class="string">"37"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br></pre></td></tr></table></figure><progress value="37" max="100"></progress><br><progress max="100"></progress><h4 id="其他标签"><a href="#其他标签" class="headerlink" title="其他标签"></a>其他标签</h4><h5 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h5><p>&lt; ruby &gt; 标记定义注释或音标</p><p>&lt; rt &gt; 标记定义对ruby的注释内容文本</p><p>&lt; rp &gt; 告诉那些不支持ruby元素的浏览器如何去显示</p><p>注：rp不要放在rt内</p><p>demo略</p><h5 id="mark标签"><a href="#mark标签" class="headerlink" title="mark标签"></a>mark标签</h5><p> 标记定义有标记的文本</p><p>demo：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    黑ui锋锐<span class="tag">&lt;<span class="name">mark</span>&gt;</span>户人<span class="tag">&lt;/<span class="name">mark</span>&gt;</span>俄铝比u你咧我恶女i柔儿v人我哦i热女iv繁华如鳄冰鱼</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br>    黑ui锋锐<mark>户人</mark>俄铝比u你咧我恶女i柔儿v人我哦i热女iv繁华如鳄冰鱼<br></p><h5 id="output标签"><a href="#output标签" class="headerlink" title="output标签"></a>output标签</h5><p>标记定义一些输出类型，计算表单结果配合使用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2014年，HTML5发布。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/01/走进HTML5/logo.jpg&quot; alt=&quot;logo&quot; title=&quot;liuyifei&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML5" scheme="https://woshilishang123.github.io/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>css动画</title>
    <link href="https://woshilishang123.github.io/2019/02/27/css%E5%8A%A8%E7%94%BB/"/>
    <id>https://woshilishang123.github.io/2019/02/27/css动画/</id>
    <published>2019-02-27T06:55:49.000Z</published>
    <updated>2019-03-01T08:23:29.865Z</updated>
    
    <content type="html"><![CDATA[<h3 id="css动画"><a href="#css动画" class="headerlink" title="css动画"></a>css动画</h3><p>动画的原理：1、大脑的视觉暂留作用。2、 画面逐渐变化。</p><p>动画的作用：1、让用户产生愉悦感。2、 引起用户的注意。3、 对用户的操作进行反馈。4、掩饰网页的运算/加载过程。 </p><p>动画的类型：1、transition补间动画。2、 keyframe关键帧动画。3、 逐帧动画。</p><p><img src="https://b-ssl.duitang.com/uploads/item/201801/05/20180105203049_cym8v.thumb.224_0.gif" alt="刘亦菲" title="刘亦菲"></p><a id="more"></a><h3 id="补间动画"><a href="#补间动画" class="headerlink" title="补间动画"></a>补间动画</h3><h4 id="补间动画支撑的操作"><a href="#补间动画支撑的操作" class="headerlink" title="补间动画支撑的操作"></a>补间动画支撑的操作</h4><p>位置-平移（left/right/margin/transform)</p><p>方位-旋转（transform）</p><p>大小-缩放（transform）</p><p>透明度（opacity）</p><p>其他-线性变换（transform）</p><h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">banckground</span>: red;</span><br><span class="line">    <span class="attribute">transition</span>: width <span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: width <span class="number">1s</span>, background <span class="number">3s</span>;<span class="comment">/*同时设置多个属性*/</span></span><br><span class="line"><span class="attribute">transition</span>: all <span class="number">1s</span>;<span class="comment">/*所有*/</span></span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">1s</span>;<span class="comment">/*定义动画/过渡效果何时开始。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">1s</span>;<span class="comment">/*规定完成动画效果需要多少秒或毫秒。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="attribute">transition-property</span>: width;<span class="comment">/*规定设置动画效果的 CSS 属性的名称。*/</span></span><br><span class="line">    <span class="attribute">transition-time-function</span>: ease;<span class="comment">/*规定速度效果的速度曲线。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>transitionAPI：transition：delay property duration time-function（timing/easing） ；</p><p>timing的属性可以在网络上寻找。</p><h3 id="逐帧动画"><a href="#逐帧动画" class="headerlink" title="逐帧动画"></a>逐帧动画</h3><p>关键帧动画的一种特殊用法</p><p>每一帧都是关键帧（keyframe）</p><p>适用于无法补间计算的动画</p><p>资源较大、</p><p>使用steps()</p><p>关键帧动画每一帧之间有动画</p><h4 id="keyframe语法"><a href="#keyframe语法" class="headerlink" title="keyframe语法"></a>keyframe语法</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@keyframes animationname &#123;keyframes-selector &#123;css-styles;&#125;&#125;</span><br></pre></td></tr></table></figure><p><em>animationname</em>：必需。定义动画的名称。</p><p>keyframes-selector：必需。动画时长的百分比。</p><p>合法的值：</p><p>0-100%<br>from（与 0% 相同）<br>to（与 100% 相同）</p><p>css-styles：必需。一个或多个合法的 CSS 样式属性。</p><h4 id="keyframe定义和用法"><a href="#keyframe定义和用法" class="headerlink" title="keyframe定义和用法"></a>keyframe定义和用法</h4><p>通过 @keyframes 规则，您能够创建动画。</p><p>创建动画的原理是，将一套 CSS 样式逐渐变化为另一套样式。</p><p>在动画过程中，您能够多次改变这套 CSS 样式。</p><p>以百分比来规定改变发生的时间，或者通过关键词 “from” 和 “to”，等价于 0% 和 100%。</p><p>0% 是动画的开始时间，100% 动画的结束时间。</p><p>为了获得最佳的浏览器支持，您应该始终定义 0% 和 100% 选择器。</p><p>注释：请使用动画属性来控制动画的外观，同时将动画与选择器绑定。</p><h4 id="animation语法"><a href="#animation语法" class="headerlink" title="animation语法"></a>animation语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">animation</span>: <span class="selector-tag">name</span> <span class="selector-tag">duration</span> <span class="selector-tag">timing-function</span> <span class="selector-tag">delay</span> <span class="selector-tag">iteration-count</span> <span class="selector-tag">direction</span>;</span><br></pre></td></tr></table></figure><h4 id="animation定义和用法"><a href="#animation定义和用法" class="headerlink" title="animation定义和用法"></a>animation定义和用法</h4><p>animation 属性是一个简写属性，用于设置六个动画属性：</p><p>animation-name：规定需要绑定到选择器的 keyframe 名称。。<br>animation-duration：规定完成动画所花费的时间，以秒或毫秒计。<br>animation-timing-function：规定动画的速度曲线。<br>animation-delay：规定在动画开始之前的延迟。<br>animation-iteration-count：规定动画应该播放的次数。<br>animation-direction：规定是否应该轮流反向播放动画。<br>注释：请始终规定 animation-duration 属性，否则时长为 0，就不会播放动画了。</p><h4 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">banckground</span>: <span class="built_in">url</span>(../demo.png) no-repeat;</span><br><span class="line">    <span class="attribute">animation</span>: mymove <span class="number">1s</span> infinite;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: <span class="built_in">steps</span>(1);<span class="comment">/*去掉关键帧之间的补间动画*/</span></span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> mymove </span><br><span class="line">&#123;</span><br><span class="line">0%   &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line">25%  &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">50%  &#123;<span class="attribute">top</span>:<span class="number">100px</span>;&#125;</span><br><span class="line">75%  &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">100% &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;css动画&quot;&gt;&lt;a href=&quot;#css动画&quot; class=&quot;headerlink&quot; title=&quot;css动画&quot;&gt;&lt;/a&gt;css动画&lt;/h3&gt;&lt;p&gt;动画的原理：1、大脑的视觉暂留作用。2、 画面逐渐变化。&lt;/p&gt;
&lt;p&gt;动画的作用：1、让用户产生愉悦感。2、 引起用户的注意。3、 对用户的操作进行反馈。4、掩饰网页的运算/加载过程。 &lt;/p&gt;
&lt;p&gt;动画的类型：1、transition补间动画。2、 keyframe关键帧动画。3、 逐帧动画。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://b-ssl.duitang.com/uploads/item/201801/05/20180105203049_cym8v.thumb.224_0.gif&quot; alt=&quot;刘亦菲&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
      <category term="动画" scheme="https://woshilishang123.github.io/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>css的一些记不住属性集合</title>
    <link href="https://woshilishang123.github.io/2019/02/26/css%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E4%B8%8D%E4%BD%8F%E5%B1%9E%E6%80%A7%E9%9B%86%E5%90%88/"/>
    <id>https://woshilishang123.github.io/2019/02/26/css的一些记不住属性集合/</id>
    <published>2019-02-26T12:36:51.000Z</published>
    <updated>2019-03-01T08:22:56.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css属性"><a href="#css属性" class="headerlink" title="css属性"></a>css属性</h1><p><img src="/2019/02/26/css的一些记不住属性集合/liuyifei.jpg" alt="liu"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>;<span class="comment">/*链接下划线去除*/</span></span><br><span class="line"><span class="selector-tag">box-sizing</span>: <span class="selector-tag">border-box</span>;<span class="comment">/*盒子宽度从内容content变成border+padding+content*/</span></span><br><span class="line">    <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">    <span class="selector-tag">border-color</span>: <span class="selector-tag">red</span>;</span><br><span class="line">    <span class="selector-tag">text-indent</span>: 20<span class="selector-tag">px</span>;<span class="comment">/*首行缩进*/</span></span><br><span class="line">    background: url("../img/list-yellow.jpg") 17px 20px no-repeat;</span><br><span class="line">    <span class="selector-tag">background-position-y</span>: <span class="selector-tag">-22px</span>;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="comment">/*清楚浮动*/</span></span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">zoom</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>height=line-height可以让文字自动垂直居中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css属性&quot;&gt;&lt;a href=&quot;#css属性&quot; class=&quot;headerlink&quot; title=&quot;css属性&quot;&gt;&lt;/a&gt;css属性&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/02/26/css的一些记不住属性集合/liuyifei.jpg&quot; alt=&quot;liu
      
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css效果</title>
    <link href="https://woshilishang123.github.io/2019/02/26/css%E6%95%88%E6%9E%9C/"/>
    <id>https://woshilishang123.github.io/2019/02/26/css效果/</id>
    <published>2019-02-26T06:28:47.000Z</published>
    <updated>2019-03-01T08:23:42.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS效果"><a href="#CSS效果" class="headerlink" title="CSS效果"></a><center>CSS效果</center></h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本篇博客介绍css中的一些效果，比如：box-shadow、text-shadow、border-radius、background、clip-path、3D-tranform等。</p><p>通过本博客的学习，你可是通过CSS实现一些特殊的效果，阴影，动画等。css的效果也被称为css最出彩的一部分。</p><p><img src="/2019/02/26/css效果/liuyifei.jpg" alt="刘亦菲" title="刘亦菲"></p><a id="more"></a><h3 id="box-shadow（投影）"><a href="#box-shadow（投影）" class="headerlink" title="box-shadow（投影）"></a>box-shadow（投影）</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><img src="/2019/02/26/css效果/shadow.jpg" alt="box-shadow" title="box-shadow"></p><p>外阴影：</p><p>24px：投影的模糊区域大小（模糊区域）</p><p>40px：投影在border box shape的基础上要扩展多少.为负值的时候投影缩小（拓展区域）</p><p>64px 64px：投影相对于原元素的偏移（偏移位置）</p><p>rgba：投影颜色和透明度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>：0 0 0 15<span class="selector-tag">px</span> <span class="selector-tag">red</span></span><br></pre></td></tr></table></figure><p>上述代码相当也给元素加了一个15px宽的外边框。此外边框和border不同的是不占据空间。元素的宽高保持不变。</p><div><br>    <p style="width: 150px; height: 100px; box-shadow: 0px 0px 0px 85px green; background: red; margin:0 auto; text-align: center"><br>        外阴影<br>    </p><br>    <p style="text-align: center; line-height:24px"><br>        此文字可以显示在上一段的“外边框”部分<br>    </p><br></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-shadow</span>：0 0 0 15<span class="selector-tag">px</span> <span class="selector-tag">red</span>，</span><br><span class="line">12<span class="selector-tag">px</span> 12<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> <span class="selector-tag">green</span>;</span><br></pre></td></tr></table></figure><p>上述代码会形成两个投影，而不是替代第一个投影。</p><p>利用此特性可以使用一个div完成一个复杂的图形。</p><p>内阴影：比外阴影多一个inset属性 。inset可以写在最前或最后。</p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>营造层次感（立体感）</p><p> 充当没有宽度的边框（不会占据空间，不影响排版）</p><p>特殊效果：无线投影</p><h3 id="text-shadow（文本投影）"><a href="#text-shadow（文本投影）" class="headerlink" title="text-shadow（文本投影）"></a>text-shadow（文本投影）</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><p>立体感</p><p>印刷品质感（字体边缘有模糊，类似图书）</p><div><br>    <center>《背影》</center><br>    <p style="line-height:2em; text-shadow: 1px 1px 0 #aaaaaa"><br>        我与父亲不相见已二年余了，我最不能忘记的是他的背影。那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子，我从北京到徐州，打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路！”<br>    </p><br>    <p style="line-height:2em; text-shadow: 0 0 1px rgba(128,128,128,.4)"><br>       回家变卖典质，父亲还了亏空；又借钱办了丧事。这些日子，家中光景很是惨淡，一半为了丧事，一半为了父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。<br>    </p><br>　　<p style="line-height:2em; text-shadow: -1px -1px 0 #ffffff; background: #000000"><br>　　到南京时，有朋友约去游逛，勾留了一日；第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖；颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有甚么要紧的了。他踌躇了一会，终于决定还是自己送我去。我两三回劝他不必去；他只说，“不要紧，他们去不好！”<br>    </p><br></div><h3 id="border-radius（圆角）"><a href="#border-radius（圆角）" class="headerlink" title="border-radius（圆角）"></a>border-radius（圆角）</h3><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>圆角矩形</p><p>圆形</p><p>半圆/扇形</p><p>一些奇奇怪怪的角</p><p>demo:</p><div><br>    <p style="width:100px; height:100px; background:red; border-radius:50px"></p><br>    <p style="width:100px; height:100px; background:red; border-radius:50%"></p><br>    <p style="width:100px; height:100px; background:red; border-radius:50px; border:15px solid green"></p><br>    <p style="width:100px; height:100px; background:red; border-top-left-radius:50px; border:15px solid green"></p><br>    <p style="width:100px; height:100px; background:red; border-top-left-radius:50px 100px; border:15px solid green"></p><br></div><p>倒数第二个还可以设置：border-top-left-radius、border-top-right-radius、border-bottom-left-radius、border-bottom-right-radius最后一个设置的垂直和水平方向不同的半径。</p><h3 id="background（背景）"><a href="#background（背景）" class="headerlink" title="background（背景）"></a>background（背景）</h3><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p>纹理，图片，渐变</p><p>雪碧图动画</p><p>背景图尺寸自适应</p><h4 id="背景图自适应"><a href="#背景图自适应" class="headerlink" title="背景图自适应"></a>背景图自适应</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.background</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(../demo.png);</span><br><span class="line">    <span class="attribute">background-position</span>:center center;<span class="comment">/*居中 center top水平居中垂直靠顶*/</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;<span class="comment">/*repeat-x repeat-y 横向/纵向 重复*/</span></span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">200px</span> <span class="number">100px</span>;<span class="comment">/*也可以使用百分比*/</span></span><br><span class="line">    <span class="attribute">background-size</span>:cover;<span class="comment">/*图片覆盖整个容器同时长宽比不变，多余的隐藏*/</span></span><br><span class="line">     <span class="attribute">background-size</span>:container;<span class="comment">/*图片覆盖整个容器同时长宽比不变，图片完整显示，无法显示的部分为空白*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="clip-path（使用较少，但神奇）"><a href="#clip-path（使用较少，但神奇）" class="headerlink" title="clip-path（使用较少，但神奇）"></a>clip-path（使用较少，但神奇）</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>对容器进行裁剪</p><p>常见几何图形</p><p>自定义路径裁剪</p><h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.background</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(../demo.png);</span><br><span class="line">    <span class="attribute">background-position</span>:center center;</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>:cover;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(100px 50px);<span class="comment">/*显示矩形 宽100px*/</span></span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">circle</span>(50px at 100px 100px);<span class="comment">/*在相对左上（100px，100px）位置显示一个半径50px的圆 在加上一个鼠标事件可以做一个很棒的动画*/</span></span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">polygon</span>(50% 0%, 100% 50%, 50% 100%, 0 50%);<span class="comment">/*多边形 指定了几个关键的点（x=50%*width,y=0%*height).可以定义无限多个点，画出各种形状*/</span></span><br><span class="line">    <span class="comment">/*clip-path: url(#clipPath);html里面有一个class="clipPath"的元素*/</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*与下面hover相衬*/</span></span><br><span class="line">    <span class="attribute">transition</span>: clip-path .<span class="number">4s</span>;<span class="comment">/*动画*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.background</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">circle</span>(80px at 100px 100px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>svg+clip-path部分略。</p><p>clip-path功能强大，但有一些浏览器兼容性不好，甚至会报错。</p><h3 id="3D-tranform（3d变换）"><a href="#3D-tranform（3d变换）" class="headerlink" title="3D-tranform（3d变换）"></a>3D-tranform（3d变换）</h3><p>略</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS效果&quot;&gt;&lt;a href=&quot;#CSS效果&quot; class=&quot;headerlink&quot; title=&quot;CSS效果&quot;&gt;&lt;/a&gt;&lt;center&gt;CSS效果&lt;/center&gt;&lt;/h1&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;本篇博客介绍css中的一些效果，比如：box-shadow、text-shadow、border-radius、background、clip-path、3D-tranform等。&lt;/p&gt;
&lt;p&gt;通过本博客的学习，你可是通过CSS实现一些特殊的效果，阴影，动画等。css的效果也被称为css最出彩的一部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/02/26/css效果/liuyifei.jpg&quot; alt=&quot;刘亦菲&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css布局——float、inline-block、响应式布局</title>
    <link href="https://woshilishang123.github.io/2019/02/17/css%E5%B8%83%E5%B1%80%E2%80%94%E2%80%94float%E5%B8%83%E5%B1%80/"/>
    <id>https://woshilishang123.github.io/2019/02/17/css布局——float布局/</id>
    <published>2019-02-17T04:22:02.000Z</published>
    <updated>2019-03-01T12:34:29.051Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博客主要介绍float布局、inline-block布局和响应式布局。<br><img src="/2019/02/17/css布局——float布局/liuyifei.jpg" alt="刘亦菲" title="刘亦菲"></p><p><strong><a id="more"></a></strong></p><h1 id="float布局"><a href="#float布局" class="headerlink" title="float布局"></a>float布局</h1><p>特点：元素浮动  脱离文档流  但不脱离文本流</p><p>对自身的影响：1、形成“块”(BFC) 这个“块”负责自己的布局，比如可以设置自己的宽高。2、位置尽量靠上。 3、位置尽量靠左（右）。</p><p><iframe src="//player.bilibili.com/player.html?aid=28282286&cid=48899295&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="480" height="360"> </iframe><br> 对兄弟的影响：1、上面贴非float元素。 2、旁边贴float元素。3、不影响其他块级元素位置（即脱离文档流）。4、影响其他块级元素内部文本（即不脱离文本流）。</p><p>对父级元素的影响：1、从布局上”消失“   ，可能造成高度塌陷。</p><p>避免高度塌陷：1、让父元素也变成“块”</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:auto;<span class="comment">/*or hidden*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、设置一个元素超出浮动部分，撑起布局。常用清除浮动方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="float布局案例"><a href="#float布局案例" class="headerlink" title="float布局案例"></a>float布局案例</h3><p>实现两栏三栏布局</p><h1 id="inline-block布局"><a href="#inline-block布局" class="headerlink" title="inline-block布局"></a>inline-block布局</h1><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1、像文本一样并列排起来。</p><p>2、没有清楚浮动等问题</p><p>3、需要处理间隙</p><h3 id="如何处理间隙"><a href="#如何处理间隙" class="headerlink" title="如何处理间隙"></a>如何处理间隙</h3><p>1、父元素：font-size=0；子元素（display=inline-block）：font-size=14px（此处字体大小根据实际情况自定义）；</p><p>2、采用注释的方式，一般不采用。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>对自适应大小的元素不友好，一般用来给顶宽的元素进行布局。</p><h1 id="响应式设计和布局"><a href="#响应式设计和布局" class="headerlink" title="响应式设计和布局"></a>响应式设计和布局</h1><h3 id="什么是响应式布局"><a href="#什么是响应式布局" class="headerlink" title="什么是响应式布局"></a>什么是响应式布局</h3><p>1、使页面在不同设备上正常使用</p><p>2、一般主要处理屏幕大小的问题</p><p>3、是否有鼠标、是否是读屏、是否支持一些样式</p><h3 id="响应式主要方法："><a href="#响应式主要方法：" class="headerlink" title="响应式主要方法："></a>响应式主要方法：</h3><p>隐藏+折行+自适应空间</p><p>布局结构必须在开始写代码之前就确定好。</p><p>隐藏：确定那一部分在移动端是可以隐藏的</p><p>折行：类似特性列表，从横排变成一行显示一个或两个</p><p>具体方法：</p><p>rem：通过html的字体大小来确定元素字体大小的方法。通过给不同大小的屏幕不同的字号来进行布局。</p><p>viewport：媒体查询，用js或手工确定屏幕多大。</p><p>media query：根据不同设备的特性来匹配不同的样式。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博客主要介绍float布局、inline-block布局和响应式布局。&lt;br&gt;&lt;img src=&quot;/2019/02/17/css布局——float布局/liuyifei.jpg&quot; alt=&quot;刘亦菲&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
      <category term="float" scheme="https://woshilishang123.github.io/tags/float/"/>
    
      <category term="inline-block" scheme="https://woshilishang123.github.io/tags/inline-block/"/>
    
  </entry>
  
  <entry>
    <title>css布局知识点详解</title>
    <link href="https://woshilishang123.github.io/2019/02/16/css%E5%B8%83%E5%B1%80/"/>
    <id>https://woshilishang123.github.io/2019/02/16/css布局/</id>
    <published>2019-02-16T11:42:52.000Z</published>
    <updated>2019-03-01T08:22:28.926Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css布局基础知识"><a href="#css布局基础知识" class="headerlink" title="css布局基础知识"></a><center>css布局基础知识</center></h1><h2 id="常用的布局方法"><a href="#常用的布局方法" class="headerlink" title="常用的布局方法"></a>常用的布局方法</h2><ol><li><p>table表格布局</p></li><li><p>float浮动＋margin</p></li><li>inline-block布局</li><li>flexbox布局</li></ol><h2 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h2><p><img src="/2019/02/16/css布局/盒模型.jpg" alt="盒模型" title="盒模型"></p><p>盒模型从内到外依次是margin（外边距）、border（边框）、padding（内边距）、content（内容）。一般说的width和height是指content（内容）的宽度和高度。</p><h2 id="display-position属性"><a href="#display-position属性" class="headerlink" title="display/position属性"></a>display/position属性</h2><p>作用：</p><p>&nbsp;&nbsp;· display确定元素的显示类型</p><p>​        &nbsp;&nbsp;&nbsp;· block/inline/inline-block</p><p>&nbsp;&nbsp;·position确定元素的位置</p><p>​        · static（静态、默认）/relative（相对）/absolute（绝对）/fixed（固定）</p><h3 id="block"><a href="#block" class="headerlink" title="block"></a>block</h3><p>  有独立宽高，默认占据一行</p><h3 id="inline"><a href="#inline" class="headerlink" title="inline"></a>inline</h3><p>  和文本一样，默认不会占据一行</p><h3 id="inline-block"><a href="#inline-block" class="headerlink" title="inline-block"></a>inline-block</h3><p>  对外表现像一个inline，对内/内部表现为block。可以有宽高.</p><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><p>静态/默认布局，出现在应该出现的位置。</p><h3 id="relative"><a href="#relative" class="headerlink" title="relative"></a>relative</h3><p>demo:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">top</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码块的作用的使class=demo的元素位置相对于其static的位置：离左边10px，里上边10px（向右向下移动10px）。</p><h3 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h3><p>demo:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>元素一旦设置为absolute布局就从文档流中脱离了，后续的元素的位置不受此元素的影响。</p><p>其定位使相对于最近的父级absolute或relative布局的元素位置。</p><h3 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h3><p>demo：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:fixed;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fixed也是脱离文档流的，但其位置使相对于浏览器可视界面的。</p><p>注：定位为<strong>relative、absolute、fixed</strong>布局的元素可以设置z-index属性。z-index属性使元素在<em> &nbsp;z轴 </em>的位置。使用方法为：z-index：2；数值越大位置越靠“上”</p><h1 id="flexbox布局"><a href="#flexbox布局" class="headerlink" title="flexbox布局"></a>flexbox布局</h1><p> 先简单介绍一下用法：父级元素：diaplay：flex；子元素：flex：1 ，2，3，····;flex的数值表示该元素占据的大小。如果子元素要设置为固定宽度：width:80px; flex:none;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css布局基础知识&quot;&gt;&lt;a href=&quot;#css布局基础知识&quot; class=&quot;headerlink&quot; title=&quot;css布局基础知识&quot;&gt;&lt;/a&gt;&lt;center&gt;css布局基础知识&lt;/center&gt;&lt;/h1&gt;&lt;h2 id=&quot;常用的布局方法&quot;&gt;&lt;a href=&quot;#常
      
    
    </summary>
    
    
      <category term="css" scheme="https://woshilishang123.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>jquery学习笔记</title>
    <link href="https://woshilishang123.github.io/2019/02/15/jquery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://woshilishang123.github.io/2019/02/15/jquery学习笔记/</id>
    <published>2019-02-15T15:54:46.000Z</published>
    <updated>2019-02-15T16:07:59.889Z</updated>
    
    <content type="html"><![CDATA[<h1><center>jquery学习笔记</center></h1> <p><img src="http://dab1nmslvvntp.cloudfront.net/wp-content/uploads/2015/08/1440764020jquery-logo.jpg" alt="jquery-logo" title="jquery-log"></p><p></p><p><img src="/2019/02/15/jquery学习笔记/jquery-logo.jpg" alt="jquery-本地" title="本地"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;center&gt;jquery学习笔记&lt;/center&gt;&lt;/h1&gt; 

&lt;p&gt;&lt;img src=&quot;http://dab1nmslvvntp.cloudfront.net/wp-content/uploads/2015/08/1440764020jquery-logo.jpg
      
    
    </summary>
    
    
      <category term="jquery" scheme="https://woshilishang123.github.io/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>tuzi的第一篇博客</title>
    <link href="https://woshilishang123.github.io/2019/02/15/hello/"/>
    <id>https://woshilishang123.github.io/2019/02/15/hello/</id>
    <published>2019-02-15T09:51:42.000Z</published>
    <updated>2019-03-01T12:33:24.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hello-，这是我的第一篇博客！"><a href="#hello-，这是我的第一篇博客！" class="headerlink" title="hello ，这是我的第一篇博客！"></a>hello ，这是我的第一篇博客！</h1><h2 id="记·二月五号早晨做的梦"><a href="#记·二月五号早晨做的梦" class="headerlink" title="记·二月五号早晨做的梦"></a>记·二月五号早晨做的梦</h2><center><br>    <strange>做了个有意思的梦</strange><br>    关于一本书<br>    不知道书名<br>    关于校园和成长<br>    之前梦里读过<br>    今天<br>    书要拍电影<br>    地点选在了我初中<br>    开机前<br>    在一个莫名其妙的晚会<br>    见到了<en>刘亦菲</en><br>    还要了张合影<br><br>    开机仪式就在学校<br>    因为今天是春节吧<br>    只记得一直放炮<br>    不过<br>    快结束的时候<br>    刘亦菲给我发QQ消息<br>    两个人聊了起来<br>    莫名其妙有了刘亦菲QQ<br>    然后就醒了<br>    最后<br>    新年快乐，各位<br></center><div style="float:right">——内容复制自我的说说</div><h2 id="刘亦菲："><a href="#刘亦菲：" class="headerlink" title="刘亦菲："></a>刘亦菲：</h2><p><img src="http://img.jiaodong.net/pic/003/005/434/00300543482_4293c1a5.jpg" alt="刘亦菲" title="刘亦菲"></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hello-，这是我的第一篇博客！&quot;&gt;&lt;a href=&quot;#hello-，这是我的第一篇博客！&quot; class=&quot;headerlink&quot; title=&quot;hello ，这是我的第一篇博客！&quot;&gt;&lt;/a&gt;hello ，这是我的第一篇博客！&lt;/h1&gt;&lt;h2 id=&quot;记·二月五号早晨做的梦&quot;&gt;&lt;a href=&quot;#记·二月五号早晨做的梦&quot; class=&quot;headerlink&quot; title=&quot;记·二月五号早晨做的梦&quot;&gt;&lt;/a&gt;记·二月五号早晨做的梦&lt;/h2&gt;&lt;center&gt;&lt;br&gt;    &lt;strange&gt;做了个有意思的梦&lt;/strange&gt;&lt;br&gt;    关于一本书&lt;br&gt;    不知道书名&lt;br&gt;    关于校园和成长&lt;br&gt;    之前梦里读过&lt;br&gt;    今天&lt;br&gt;    书要拍电影&lt;br&gt;    地点选在了我初中&lt;br&gt;    开机前&lt;br&gt;    在一个莫名其妙的晚会&lt;br&gt;    见到了&lt;en&gt;刘亦菲&lt;/en&gt;&lt;br&gt;    还要了张合影&lt;br&gt;&lt;br&gt;    开机仪式就在学校&lt;br&gt;    因为今天是春节吧&lt;br&gt;    只记得一直放炮&lt;br&gt;    不过&lt;br&gt;    快结束的时候&lt;br&gt;    刘亦菲给我发QQ消息&lt;br&gt;    两个人聊了起来&lt;br&gt;    莫名其妙有了刘亦菲QQ&lt;br&gt;    然后就醒了&lt;br&gt;    最后&lt;br&gt;    新年快乐，各位&lt;br&gt;&lt;/center&gt;





&lt;div style=&quot;float:right&quot;&gt;——内容复制自我的说说&lt;/div&gt;

&lt;h2 id=&quot;刘亦菲：&quot;&gt;&lt;a href=&quot;#刘亦菲：&quot; class=&quot;headerlink&quot; title=&quot;刘亦菲：&quot;&gt;&lt;/a&gt;刘亦菲：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://img.jiaodong.net/pic/003/005/434/00300543482_4293c1a5.jpg&quot; alt=&quot;刘亦菲&quot; title=&quot;刘亦菲&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="tuzi" scheme="https://woshilishang123.github.io/tags/tuzi/"/>
    
      <category term="frist" scheme="https://woshilishang123.github.io/tags/frist/"/>
    
  </entry>
  
</feed>
